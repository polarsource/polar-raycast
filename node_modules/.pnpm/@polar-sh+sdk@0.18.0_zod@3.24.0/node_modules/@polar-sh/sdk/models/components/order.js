"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Order$ = exports.Order$outboundSchema = exports.Order$inboundSchema = exports.OrderDiscount$ = exports.OrderDiscount$outboundSchema = exports.OrderDiscount$inboundSchema = exports.OrderCustomFieldData$ = exports.OrderCustomFieldData$outboundSchema = exports.OrderCustomFieldData$inboundSchema = exports.OrderMetadata$ = exports.OrderMetadata$outboundSchema = exports.OrderMetadata$inboundSchema = void 0;
exports.orderMetadataToJSON = orderMetadataToJSON;
exports.orderMetadataFromJSON = orderMetadataFromJSON;
exports.orderCustomFieldDataToJSON = orderCustomFieldDataToJSON;
exports.orderCustomFieldDataFromJSON = orderCustomFieldDataFromJSON;
exports.orderDiscountToJSON = orderDiscountToJSON;
exports.orderDiscountFromJSON = orderDiscountFromJSON;
exports.orderToJSON = orderToJSON;
exports.orderFromJSON = orderFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const address_js_1 = require("./address.js");
const discountfixedonceforeverdurationbase_js_1 = require("./discountfixedonceforeverdurationbase.js");
const discountfixedrepeatdurationbase_js_1 = require("./discountfixedrepeatdurationbase.js");
const discountpercentageonceforeverdurationbase_js_1 = require("./discountpercentageonceforeverdurationbase.js");
const discountpercentagerepeatdurationbase_js_1 = require("./discountpercentagerepeatdurationbase.js");
const orderbillingreason_js_1 = require("./orderbillingreason.js");
const orderproduct_js_1 = require("./orderproduct.js");
const ordersubscription_js_1 = require("./ordersubscription.js");
const orderuser_js_1 = require("./orderuser.js");
const productprice_js_1 = require("./productprice.js");
/** @internal */
exports.OrderMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.OrderMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrderMetadata$;
(function (OrderMetadata$) {
    /** @deprecated use `OrderMetadata$inboundSchema` instead. */
    OrderMetadata$.inboundSchema = exports.OrderMetadata$inboundSchema;
    /** @deprecated use `OrderMetadata$outboundSchema` instead. */
    OrderMetadata$.outboundSchema = exports.OrderMetadata$outboundSchema;
})(OrderMetadata$ || (exports.OrderMetadata$ = OrderMetadata$ = {}));
function orderMetadataToJSON(orderMetadata) {
    return JSON.stringify(exports.OrderMetadata$outboundSchema.parse(orderMetadata));
}
function orderMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrderMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderMetadata' from JSON`);
}
/** @internal */
exports.OrderCustomFieldData$inboundSchema = z.object({});
/** @internal */
exports.OrderCustomFieldData$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrderCustomFieldData$;
(function (OrderCustomFieldData$) {
    /** @deprecated use `OrderCustomFieldData$inboundSchema` instead. */
    OrderCustomFieldData$.inboundSchema = exports.OrderCustomFieldData$inboundSchema;
    /** @deprecated use `OrderCustomFieldData$outboundSchema` instead. */
    OrderCustomFieldData$.outboundSchema = exports.OrderCustomFieldData$outboundSchema;
})(OrderCustomFieldData$ || (exports.OrderCustomFieldData$ = OrderCustomFieldData$ = {}));
function orderCustomFieldDataToJSON(orderCustomFieldData) {
    return JSON.stringify(exports.OrderCustomFieldData$outboundSchema.parse(orderCustomFieldData));
}
function orderCustomFieldDataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrderCustomFieldData$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderCustomFieldData' from JSON`);
}
/** @internal */
exports.OrderDiscount$inboundSchema = z.union([
    discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$inboundSchema,
    discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$inboundSchema,
    discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$inboundSchema,
    discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$inboundSchema,
]);
/** @internal */
exports.OrderDiscount$outboundSchema = z.union([
    discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$outboundSchema,
    discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$outboundSchema,
    discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$outboundSchema,
    discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrderDiscount$;
(function (OrderDiscount$) {
    /** @deprecated use `OrderDiscount$inboundSchema` instead. */
    OrderDiscount$.inboundSchema = exports.OrderDiscount$inboundSchema;
    /** @deprecated use `OrderDiscount$outboundSchema` instead. */
    OrderDiscount$.outboundSchema = exports.OrderDiscount$outboundSchema;
})(OrderDiscount$ || (exports.OrderDiscount$ = OrderDiscount$ = {}));
function orderDiscountToJSON(orderDiscount) {
    return JSON.stringify(exports.OrderDiscount$outboundSchema.parse(orderDiscount));
}
function orderDiscountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrderDiscount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderDiscount' from JSON`);
}
/** @internal */
exports.Order$inboundSchema = z
    .object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    custom_field_data: z.lazy(() => exports.OrderCustomFieldData$inboundSchema)
        .optional(),
    amount: z.number().int(),
    tax_amount: z.number().int(),
    currency: z.string(),
    billing_reason: orderbillingreason_js_1.OrderBillingReason$inboundSchema,
    billing_address: z.nullable(address_js_1.Address$inboundSchema),
    user_id: z.string(),
    product_id: z.string(),
    product_price_id: z.string(),
    discount_id: z.nullable(z.string()),
    subscription_id: z.nullable(z.string()),
    checkout_id: z.nullable(z.string()),
    user: orderuser_js_1.OrderUser$inboundSchema,
    product: orderproduct_js_1.OrderProduct$inboundSchema,
    product_price: productprice_js_1.ProductPrice$inboundSchema,
    discount: z.nullable(z.union([
        discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$inboundSchema,
        discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$inboundSchema,
        discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$inboundSchema,
        discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$inboundSchema,
    ])),
    subscription: z.nullable(ordersubscription_js_1.OrderSubscription$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "custom_field_data": "customFieldData",
        "tax_amount": "taxAmount",
        "billing_reason": "billingReason",
        "billing_address": "billingAddress",
        "user_id": "userId",
        "product_id": "productId",
        "product_price_id": "productPriceId",
        "discount_id": "discountId",
        "subscription_id": "subscriptionId",
        "checkout_id": "checkoutId",
        "product_price": "productPrice",
    });
});
/** @internal */
exports.Order$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    customFieldData: z.lazy(() => exports.OrderCustomFieldData$outboundSchema).optional(),
    amount: z.number().int(),
    taxAmount: z.number().int(),
    currency: z.string(),
    billingReason: orderbillingreason_js_1.OrderBillingReason$outboundSchema,
    billingAddress: z.nullable(address_js_1.Address$outboundSchema),
    userId: z.string(),
    productId: z.string(),
    productPriceId: z.string(),
    discountId: z.nullable(z.string()),
    subscriptionId: z.nullable(z.string()),
    checkoutId: z.nullable(z.string()),
    user: orderuser_js_1.OrderUser$outboundSchema,
    product: orderproduct_js_1.OrderProduct$outboundSchema,
    productPrice: productprice_js_1.ProductPrice$outboundSchema,
    discount: z.nullable(z.union([
        discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$outboundSchema,
        discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$outboundSchema,
        discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$outboundSchema,
        discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$outboundSchema,
    ])),
    subscription: z.nullable(ordersubscription_js_1.OrderSubscription$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        customFieldData: "custom_field_data",
        taxAmount: "tax_amount",
        billingReason: "billing_reason",
        billingAddress: "billing_address",
        userId: "user_id",
        productId: "product_id",
        productPriceId: "product_price_id",
        discountId: "discount_id",
        subscriptionId: "subscription_id",
        checkoutId: "checkout_id",
        productPrice: "product_price",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Order$;
(function (Order$) {
    /** @deprecated use `Order$inboundSchema` instead. */
    Order$.inboundSchema = exports.Order$inboundSchema;
    /** @deprecated use `Order$outboundSchema` instead. */
    Order$.outboundSchema = exports.Order$outboundSchema;
})(Order$ || (exports.Order$ = Order$ = {}));
function orderToJSON(order) {
    return JSON.stringify(exports.Order$outboundSchema.parse(order));
}
function orderFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Order$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Order' from JSON`);
}
//# sourceMappingURL=order.js.map