import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CheckoutPriceCreate, CheckoutPriceCreate$Outbound } from "./checkoutpricecreate.js";
import { CheckoutProductCreate, CheckoutProductCreate$Outbound } from "./checkoutproductcreate.js";
export type CheckoutCreate = CheckoutProductCreate | CheckoutPriceCreate;
/** @internal */
export declare const CheckoutCreate$inboundSchema: z.ZodType<CheckoutCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutCreate$Outbound = CheckoutProductCreate$Outbound | CheckoutPriceCreate$Outbound;
/** @internal */
export declare const CheckoutCreate$outboundSchema: z.ZodType<CheckoutCreate$Outbound, z.ZodTypeDef, CheckoutCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutCreate$ {
    /** @deprecated use `CheckoutCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutCreate$Outbound, z.ZodTypeDef, CheckoutCreate>;
    /** @deprecated use `CheckoutCreate$Outbound` instead. */
    type Outbound = CheckoutCreate$Outbound;
}
export declare function checkoutCreateToJSON(checkoutCreate: CheckoutCreate): string;
export declare function checkoutCreateFromJSON(jsonString: string): SafeParseResult<CheckoutCreate, SDKValidationError>;
//# sourceMappingURL=checkoutcreate.d.ts.map