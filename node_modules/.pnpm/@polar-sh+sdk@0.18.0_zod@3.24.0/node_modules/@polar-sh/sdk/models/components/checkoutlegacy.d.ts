import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CheckoutProduct, CheckoutProduct$Outbound } from "./checkoutproduct.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
/**
 * A checkout session.
 */
export type CheckoutLegacy = {
    /**
     * The ID of the checkout.
     */
    id: string;
    /**
     * URL the customer should be redirected to complete the purchase.
     */
    url?: string | null | undefined;
    customerEmail: string | null;
    customerName: string | null;
    /**
     * Product data for a checkout session.
     */
    product: CheckoutProduct;
    productPrice: ProductPrice;
};
/** @internal */
export declare const CheckoutLegacy$inboundSchema: z.ZodType<CheckoutLegacy, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutLegacy$Outbound = {
    id: string;
    url?: string | null | undefined;
    customer_email: string | null;
    customer_name: string | null;
    product: CheckoutProduct$Outbound;
    product_price: ProductPrice$Outbound;
};
/** @internal */
export declare const CheckoutLegacy$outboundSchema: z.ZodType<CheckoutLegacy$Outbound, z.ZodTypeDef, CheckoutLegacy>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutLegacy$ {
    /** @deprecated use `CheckoutLegacy$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutLegacy, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutLegacy$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutLegacy$Outbound, z.ZodTypeDef, CheckoutLegacy>;
    /** @deprecated use `CheckoutLegacy$Outbound` instead. */
    type Outbound = CheckoutLegacy$Outbound;
}
export declare function checkoutLegacyToJSON(checkoutLegacy: CheckoutLegacy): string;
export declare function checkoutLegacyFromJSON(jsonString: string): SafeParseResult<CheckoutLegacy, SDKValidationError>;
//# sourceMappingURL=checkoutlegacy.d.ts.map