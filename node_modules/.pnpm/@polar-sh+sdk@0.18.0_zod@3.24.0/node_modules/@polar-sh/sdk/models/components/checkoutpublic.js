"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutPublic$ = exports.CheckoutPublic$outboundSchema = exports.CheckoutPublic$inboundSchema = exports.CheckoutPublicDiscount$ = exports.CheckoutPublicDiscount$outboundSchema = exports.CheckoutPublicDiscount$inboundSchema = exports.CheckoutPublicPaymentProcessorMetadata$ = exports.CheckoutPublicPaymentProcessorMetadata$outboundSchema = exports.CheckoutPublicPaymentProcessorMetadata$inboundSchema = exports.CheckoutPublicCustomFieldData$ = exports.CheckoutPublicCustomFieldData$outboundSchema = exports.CheckoutPublicCustomFieldData$inboundSchema = void 0;
exports.checkoutPublicCustomFieldDataToJSON = checkoutPublicCustomFieldDataToJSON;
exports.checkoutPublicCustomFieldDataFromJSON = checkoutPublicCustomFieldDataFromJSON;
exports.checkoutPublicPaymentProcessorMetadataToJSON = checkoutPublicPaymentProcessorMetadataToJSON;
exports.checkoutPublicPaymentProcessorMetadataFromJSON = checkoutPublicPaymentProcessorMetadataFromJSON;
exports.checkoutPublicDiscountToJSON = checkoutPublicDiscountToJSON;
exports.checkoutPublicDiscountFromJSON = checkoutPublicDiscountFromJSON;
exports.checkoutPublicToJSON = checkoutPublicToJSON;
exports.checkoutPublicFromJSON = checkoutPublicFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const address_js_1 = require("./address.js");
const attachedcustomfield_js_1 = require("./attachedcustomfield.js");
const checkoutdiscountfixedonceforeverduration_js_1 = require("./checkoutdiscountfixedonceforeverduration.js");
const checkoutdiscountfixedrepeatduration_js_1 = require("./checkoutdiscountfixedrepeatduration.js");
const checkoutdiscountpercentageonceforeverduration_js_1 = require("./checkoutdiscountpercentageonceforeverduration.js");
const checkoutdiscountpercentagerepeatduration_js_1 = require("./checkoutdiscountpercentagerepeatduration.js");
const checkoutproduct_js_1 = require("./checkoutproduct.js");
const checkoutstatus_js_1 = require("./checkoutstatus.js");
const organization_js_1 = require("./organization.js");
const productprice_js_1 = require("./productprice.js");
/** @internal */
exports.CheckoutPublicCustomFieldData$inboundSchema = z.object({});
/** @internal */
exports.CheckoutPublicCustomFieldData$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutPublicCustomFieldData$;
(function (CheckoutPublicCustomFieldData$) {
    /** @deprecated use `CheckoutPublicCustomFieldData$inboundSchema` instead. */
    CheckoutPublicCustomFieldData$.inboundSchema = exports.CheckoutPublicCustomFieldData$inboundSchema;
    /** @deprecated use `CheckoutPublicCustomFieldData$outboundSchema` instead. */
    CheckoutPublicCustomFieldData$.outboundSchema = exports.CheckoutPublicCustomFieldData$outboundSchema;
})(CheckoutPublicCustomFieldData$ || (exports.CheckoutPublicCustomFieldData$ = CheckoutPublicCustomFieldData$ = {}));
function checkoutPublicCustomFieldDataToJSON(checkoutPublicCustomFieldData) {
    return JSON.stringify(exports.CheckoutPublicCustomFieldData$outboundSchema.parse(checkoutPublicCustomFieldData));
}
function checkoutPublicCustomFieldDataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutPublicCustomFieldData$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutPublicCustomFieldData' from JSON`);
}
/** @internal */
exports.CheckoutPublicPaymentProcessorMetadata$inboundSchema = z.object({});
/** @internal */
exports.CheckoutPublicPaymentProcessorMetadata$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutPublicPaymentProcessorMetadata$;
(function (CheckoutPublicPaymentProcessorMetadata$) {
    /** @deprecated use `CheckoutPublicPaymentProcessorMetadata$inboundSchema` instead. */
    CheckoutPublicPaymentProcessorMetadata$.inboundSchema = exports.CheckoutPublicPaymentProcessorMetadata$inboundSchema;
    /** @deprecated use `CheckoutPublicPaymentProcessorMetadata$outboundSchema` instead. */
    CheckoutPublicPaymentProcessorMetadata$.outboundSchema = exports.CheckoutPublicPaymentProcessorMetadata$outboundSchema;
})(CheckoutPublicPaymentProcessorMetadata$ || (exports.CheckoutPublicPaymentProcessorMetadata$ = CheckoutPublicPaymentProcessorMetadata$ = {}));
function checkoutPublicPaymentProcessorMetadataToJSON(checkoutPublicPaymentProcessorMetadata) {
    return JSON.stringify(exports.CheckoutPublicPaymentProcessorMetadata$outboundSchema.parse(checkoutPublicPaymentProcessorMetadata));
}
function checkoutPublicPaymentProcessorMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutPublicPaymentProcessorMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutPublicPaymentProcessorMetadata' from JSON`);
}
/** @internal */
exports.CheckoutPublicDiscount$inboundSchema = z.union([
    checkoutdiscountpercentageonceforeverduration_js_1.CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,
    checkoutdiscountfixedonceforeverduration_js_1.CheckoutDiscountFixedOnceForeverDuration$inboundSchema,
    checkoutdiscountpercentagerepeatduration_js_1.CheckoutDiscountPercentageRepeatDuration$inboundSchema,
    checkoutdiscountfixedrepeatduration_js_1.CheckoutDiscountFixedRepeatDuration$inboundSchema,
]);
/** @internal */
exports.CheckoutPublicDiscount$outboundSchema = z.union([
    checkoutdiscountpercentageonceforeverduration_js_1.CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,
    checkoutdiscountfixedonceforeverduration_js_1.CheckoutDiscountFixedOnceForeverDuration$outboundSchema,
    checkoutdiscountpercentagerepeatduration_js_1.CheckoutDiscountPercentageRepeatDuration$outboundSchema,
    checkoutdiscountfixedrepeatduration_js_1.CheckoutDiscountFixedRepeatDuration$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutPublicDiscount$;
(function (CheckoutPublicDiscount$) {
    /** @deprecated use `CheckoutPublicDiscount$inboundSchema` instead. */
    CheckoutPublicDiscount$.inboundSchema = exports.CheckoutPublicDiscount$inboundSchema;
    /** @deprecated use `CheckoutPublicDiscount$outboundSchema` instead. */
    CheckoutPublicDiscount$.outboundSchema = exports.CheckoutPublicDiscount$outboundSchema;
})(CheckoutPublicDiscount$ || (exports.CheckoutPublicDiscount$ = CheckoutPublicDiscount$ = {}));
function checkoutPublicDiscountToJSON(checkoutPublicDiscount) {
    return JSON.stringify(exports.CheckoutPublicDiscount$outboundSchema.parse(checkoutPublicDiscount));
}
function checkoutPublicDiscountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutPublicDiscount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutPublicDiscount' from JSON`);
}
/** @internal */
exports.CheckoutPublic$inboundSchema = z.object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    custom_field_data: z.lazy(() => exports.CheckoutPublicCustomFieldData$inboundSchema)
        .optional(),
    payment_processor: z.literal("stripe").optional(),
    status: checkoutstatus_js_1.CheckoutStatus$inboundSchema,
    client_secret: z.string(),
    url: z.string(),
    expires_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    success_url: z.string(),
    embed_origin: z.nullable(z.string()),
    amount: z.nullable(z.number().int()),
    tax_amount: z.nullable(z.number().int()),
    currency: z.nullable(z.string()),
    subtotal_amount: z.nullable(z.number().int()),
    total_amount: z.nullable(z.number().int()),
    product_id: z.string(),
    product_price_id: z.string(),
    discount_id: z.nullable(z.string()),
    allow_discount_codes: z.boolean(),
    is_discount_applicable: z.boolean(),
    is_free_product_price: z.boolean(),
    is_payment_required: z.boolean(),
    is_payment_setup_required: z.boolean(),
    is_payment_form_required: z.boolean(),
    customer_id: z.nullable(z.string()),
    customer_name: z.nullable(z.string()),
    customer_email: z.nullable(z.string()),
    customer_ip_address: z.nullable(z.string()),
    customer_billing_address: z.nullable(address_js_1.Address$inboundSchema),
    customer_tax_id: z.nullable(z.string()),
    payment_processor_metadata: z.lazy(() => exports.CheckoutPublicPaymentProcessorMetadata$inboundSchema),
    product: checkoutproduct_js_1.CheckoutProduct$inboundSchema,
    product_price: productprice_js_1.ProductPrice$inboundSchema,
    discount: z.nullable(z.union([
        checkoutdiscountpercentageonceforeverduration_js_1.CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,
        checkoutdiscountfixedonceforeverduration_js_1.CheckoutDiscountFixedOnceForeverDuration$inboundSchema,
        checkoutdiscountpercentagerepeatduration_js_1.CheckoutDiscountPercentageRepeatDuration$inboundSchema,
        checkoutdiscountfixedrepeatduration_js_1.CheckoutDiscountFixedRepeatDuration$inboundSchema,
    ])),
    organization: organization_js_1.Organization$inboundSchema,
    attached_custom_fields: z.array(attachedcustomfield_js_1.AttachedCustomField$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "custom_field_data": "customFieldData",
        "payment_processor": "paymentProcessor",
        "client_secret": "clientSecret",
        "expires_at": "expiresAt",
        "success_url": "successUrl",
        "embed_origin": "embedOrigin",
        "tax_amount": "taxAmount",
        "subtotal_amount": "subtotalAmount",
        "total_amount": "totalAmount",
        "product_id": "productId",
        "product_price_id": "productPriceId",
        "discount_id": "discountId",
        "allow_discount_codes": "allowDiscountCodes",
        "is_discount_applicable": "isDiscountApplicable",
        "is_free_product_price": "isFreeProductPrice",
        "is_payment_required": "isPaymentRequired",
        "is_payment_setup_required": "isPaymentSetupRequired",
        "is_payment_form_required": "isPaymentFormRequired",
        "customer_id": "customerId",
        "customer_name": "customerName",
        "customer_email": "customerEmail",
        "customer_ip_address": "customerIpAddress",
        "customer_billing_address": "customerBillingAddress",
        "customer_tax_id": "customerTaxId",
        "payment_processor_metadata": "paymentProcessorMetadata",
        "product_price": "productPrice",
        "attached_custom_fields": "attachedCustomFields",
    });
});
/** @internal */
exports.CheckoutPublic$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    customFieldData: z.lazy(() => exports.CheckoutPublicCustomFieldData$outboundSchema)
        .optional(),
    paymentProcessor: z.literal("stripe").default("stripe"),
    status: checkoutstatus_js_1.CheckoutStatus$outboundSchema,
    clientSecret: z.string(),
    url: z.string(),
    expiresAt: z.date().transform(v => v.toISOString()),
    successUrl: z.string(),
    embedOrigin: z.nullable(z.string()),
    amount: z.nullable(z.number().int()),
    taxAmount: z.nullable(z.number().int()),
    currency: z.nullable(z.string()),
    subtotalAmount: z.nullable(z.number().int()),
    totalAmount: z.nullable(z.number().int()),
    productId: z.string(),
    productPriceId: z.string(),
    discountId: z.nullable(z.string()),
    allowDiscountCodes: z.boolean(),
    isDiscountApplicable: z.boolean(),
    isFreeProductPrice: z.boolean(),
    isPaymentRequired: z.boolean(),
    isPaymentSetupRequired: z.boolean(),
    isPaymentFormRequired: z.boolean(),
    customerId: z.nullable(z.string()),
    customerName: z.nullable(z.string()),
    customerEmail: z.nullable(z.string()),
    customerIpAddress: z.nullable(z.string()),
    customerBillingAddress: z.nullable(address_js_1.Address$outboundSchema),
    customerTaxId: z.nullable(z.string()),
    paymentProcessorMetadata: z.lazy(() => exports.CheckoutPublicPaymentProcessorMetadata$outboundSchema),
    product: checkoutproduct_js_1.CheckoutProduct$outboundSchema,
    productPrice: productprice_js_1.ProductPrice$outboundSchema,
    discount: z.nullable(z.union([
        checkoutdiscountpercentageonceforeverduration_js_1.CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,
        checkoutdiscountfixedonceforeverduration_js_1.CheckoutDiscountFixedOnceForeverDuration$outboundSchema,
        checkoutdiscountpercentagerepeatduration_js_1.CheckoutDiscountPercentageRepeatDuration$outboundSchema,
        checkoutdiscountfixedrepeatduration_js_1.CheckoutDiscountFixedRepeatDuration$outboundSchema,
    ])),
    organization: organization_js_1.Organization$outboundSchema,
    attachedCustomFields: z.array(attachedcustomfield_js_1.AttachedCustomField$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        customFieldData: "custom_field_data",
        paymentProcessor: "payment_processor",
        clientSecret: "client_secret",
        expiresAt: "expires_at",
        successUrl: "success_url",
        embedOrigin: "embed_origin",
        taxAmount: "tax_amount",
        subtotalAmount: "subtotal_amount",
        totalAmount: "total_amount",
        productId: "product_id",
        productPriceId: "product_price_id",
        discountId: "discount_id",
        allowDiscountCodes: "allow_discount_codes",
        isDiscountApplicable: "is_discount_applicable",
        isFreeProductPrice: "is_free_product_price",
        isPaymentRequired: "is_payment_required",
        isPaymentSetupRequired: "is_payment_setup_required",
        isPaymentFormRequired: "is_payment_form_required",
        customerId: "customer_id",
        customerName: "customer_name",
        customerEmail: "customer_email",
        customerIpAddress: "customer_ip_address",
        customerBillingAddress: "customer_billing_address",
        customerTaxId: "customer_tax_id",
        paymentProcessorMetadata: "payment_processor_metadata",
        productPrice: "product_price",
        attachedCustomFields: "attached_custom_fields",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutPublic$;
(function (CheckoutPublic$) {
    /** @deprecated use `CheckoutPublic$inboundSchema` instead. */
    CheckoutPublic$.inboundSchema = exports.CheckoutPublic$inboundSchema;
    /** @deprecated use `CheckoutPublic$outboundSchema` instead. */
    CheckoutPublic$.outboundSchema = exports.CheckoutPublic$outboundSchema;
})(CheckoutPublic$ || (exports.CheckoutPublic$ = CheckoutPublic$ = {}));
function checkoutPublicToJSON(checkoutPublic) {
    return JSON.stringify(exports.CheckoutPublic$outboundSchema.parse(checkoutPublic));
}
function checkoutPublicFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutPublic$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutPublic' from JSON`);
}
//# sourceMappingURL=checkoutpublic.js.map