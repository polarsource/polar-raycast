"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldCreate$ = exports.CustomFieldCreate$outboundSchema = exports.CustomFieldCreate$inboundSchema = void 0;
exports.customFieldCreateToJSON = customFieldCreateToJSON;
exports.customFieldCreateFromJSON = customFieldCreateFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const customfieldcreatecheckbox_js_1 = require("./customfieldcreatecheckbox.js");
const customfieldcreatedate_js_1 = require("./customfieldcreatedate.js");
const customfieldcreatenumber_js_1 = require("./customfieldcreatenumber.js");
const customfieldcreateselect_js_1 = require("./customfieldcreateselect.js");
const customfieldcreatetext_js_1 = require("./customfieldcreatetext.js");
/** @internal */
exports.CustomFieldCreate$inboundSchema = z.union([
    customfieldcreatecheckbox_js_1.CustomFieldCreateCheckbox$inboundSchema.and(z.object({ type: z.literal("checkbox") }).transform((v) => ({
        type: v.type,
    }))),
    customfieldcreatedate_js_1.CustomFieldCreateDate$inboundSchema.and(z.object({ type: z.literal("date") }).transform((v) => ({ type: v.type }))),
    customfieldcreatenumber_js_1.CustomFieldCreateNumber$inboundSchema.and(z.object({ type: z.literal("number") }).transform((v) => ({
        type: v.type,
    }))),
    customfieldcreateselect_js_1.CustomFieldCreateSelect$inboundSchema.and(z.object({ type: z.literal("select") }).transform((v) => ({
        type: v.type,
    }))),
    customfieldcreatetext_js_1.CustomFieldCreateText$inboundSchema.and(z.object({ type: z.literal("text") }).transform((v) => ({ type: v.type }))),
]);
/** @internal */
exports.CustomFieldCreate$outboundSchema = z.union([
    customfieldcreatecheckbox_js_1.CustomFieldCreateCheckbox$outboundSchema.and(z.object({ type: z.literal("checkbox") }).transform((v) => ({
        type: v.type,
    }))),
    customfieldcreatedate_js_1.CustomFieldCreateDate$outboundSchema.and(z.object({ type: z.literal("date") }).transform((v) => ({ type: v.type }))),
    customfieldcreatenumber_js_1.CustomFieldCreateNumber$outboundSchema.and(z.object({ type: z.literal("number") }).transform((v) => ({
        type: v.type,
    }))),
    customfieldcreateselect_js_1.CustomFieldCreateSelect$outboundSchema.and(z.object({ type: z.literal("select") }).transform((v) => ({
        type: v.type,
    }))),
    customfieldcreatetext_js_1.CustomFieldCreateText$outboundSchema.and(z.object({ type: z.literal("text") }).transform((v) => ({ type: v.type }))),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreate$;
(function (CustomFieldCreate$) {
    /** @deprecated use `CustomFieldCreate$inboundSchema` instead. */
    CustomFieldCreate$.inboundSchema = exports.CustomFieldCreate$inboundSchema;
    /** @deprecated use `CustomFieldCreate$outboundSchema` instead. */
    CustomFieldCreate$.outboundSchema = exports.CustomFieldCreate$outboundSchema;
})(CustomFieldCreate$ || (exports.CustomFieldCreate$ = CustomFieldCreate$ = {}));
function customFieldCreateToJSON(customFieldCreate) {
    return JSON.stringify(exports.CustomFieldCreate$outboundSchema.parse(customFieldCreate));
}
function customFieldCreateFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreate' from JSON`);
}
//# sourceMappingURL=customfieldcreate.js.map