import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type BenefitLicenseKeyActivationProperties = {
    limit: number;
    enableUserAdmin: boolean;
};
/** @internal */
export declare const BenefitLicenseKeyActivationProperties$inboundSchema: z.ZodType<BenefitLicenseKeyActivationProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitLicenseKeyActivationProperties$Outbound = {
    limit: number;
    enable_user_admin: boolean;
};
/** @internal */
export declare const BenefitLicenseKeyActivationProperties$outboundSchema: z.ZodType<BenefitLicenseKeyActivationProperties$Outbound, z.ZodTypeDef, BenefitLicenseKeyActivationProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitLicenseKeyActivationProperties$ {
    /** @deprecated use `BenefitLicenseKeyActivationProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitLicenseKeyActivationProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitLicenseKeyActivationProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitLicenseKeyActivationProperties$Outbound, z.ZodTypeDef, BenefitLicenseKeyActivationProperties>;
    /** @deprecated use `BenefitLicenseKeyActivationProperties$Outbound` instead. */
    type Outbound = BenefitLicenseKeyActivationProperties$Outbound;
}
export declare function benefitLicenseKeyActivationPropertiesToJSON(benefitLicenseKeyActivationProperties: BenefitLicenseKeyActivationProperties): string;
export declare function benefitLicenseKeyActivationPropertiesFromJSON(jsonString: string): SafeParseResult<BenefitLicenseKeyActivationProperties, SDKValidationError>;
//# sourceMappingURL=benefitlicensekeyactivationproperties.d.ts.map