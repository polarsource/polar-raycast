import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomFieldNumberProperties, CustomFieldNumberProperties$Outbound } from "./customfieldnumberproperties.js";
export type CustomFieldNumberMetadata = string | number | boolean;
export declare const CustomFieldNumberType: {
    readonly Number: "number";
};
export type CustomFieldNumberType = ClosedEnum<typeof CustomFieldNumberType>;
/**
 * Schema for a custom field of type number.
 */
export type CustomFieldNumber = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the object.
     */
    id: string;
    metadata: {
        [k: string]: string | number | boolean;
    };
    type?: "number" | undefined;
    /**
     * Identifier of the custom field. It'll be used as key when storing the value.
     */
    slug: string;
    /**
     * Name of the custom field.
     */
    name: string;
    /**
     * The ID of the organization owning the custom field.
     */
    organizationId: string;
    properties: CustomFieldNumberProperties;
};
/** @internal */
export declare const CustomFieldNumberMetadata$inboundSchema: z.ZodType<CustomFieldNumberMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldNumberMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const CustomFieldNumberMetadata$outboundSchema: z.ZodType<CustomFieldNumberMetadata$Outbound, z.ZodTypeDef, CustomFieldNumberMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldNumberMetadata$ {
    /** @deprecated use `CustomFieldNumberMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldNumberMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldNumberMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldNumberMetadata$Outbound, z.ZodTypeDef, CustomFieldNumberMetadata>;
    /** @deprecated use `CustomFieldNumberMetadata$Outbound` instead. */
    type Outbound = CustomFieldNumberMetadata$Outbound;
}
export declare function customFieldNumberMetadataToJSON(customFieldNumberMetadata: CustomFieldNumberMetadata): string;
export declare function customFieldNumberMetadataFromJSON(jsonString: string): SafeParseResult<CustomFieldNumberMetadata, SDKValidationError>;
/** @internal */
export declare const CustomFieldNumberType$inboundSchema: z.ZodNativeEnum<typeof CustomFieldNumberType>;
/** @internal */
export declare const CustomFieldNumberType$outboundSchema: z.ZodNativeEnum<typeof CustomFieldNumberType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldNumberType$ {
    /** @deprecated use `CustomFieldNumberType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Number: "number";
    }>;
    /** @deprecated use `CustomFieldNumberType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Number: "number";
    }>;
}
/** @internal */
export declare const CustomFieldNumber$inboundSchema: z.ZodType<CustomFieldNumber, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldNumber$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    metadata: {
        [k: string]: string | number | boolean;
    };
    type: "number";
    slug: string;
    name: string;
    organization_id: string;
    properties: CustomFieldNumberProperties$Outbound;
};
/** @internal */
export declare const CustomFieldNumber$outboundSchema: z.ZodType<CustomFieldNumber$Outbound, z.ZodTypeDef, CustomFieldNumber>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldNumber$ {
    /** @deprecated use `CustomFieldNumber$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldNumber, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldNumber$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldNumber$Outbound, z.ZodTypeDef, CustomFieldNumber>;
    /** @deprecated use `CustomFieldNumber$Outbound` instead. */
    type Outbound = CustomFieldNumber$Outbound;
}
export declare function customFieldNumberToJSON(customFieldNumber: CustomFieldNumber): string;
export declare function customFieldNumberFromJSON(jsonString: string): SafeParseResult<CustomFieldNumber, SDKValidationError>;
//# sourceMappingURL=customfieldnumber.d.ts.map