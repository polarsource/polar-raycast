import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ProductOneTimeCreate, ProductOneTimeCreate$Outbound } from "./productonetimecreate.js";
import { ProductRecurringCreate, ProductRecurringCreate$Outbound } from "./productrecurringcreate.js";
export type ProductCreate = ProductRecurringCreate | ProductOneTimeCreate;
/** @internal */
export declare const ProductCreate$inboundSchema: z.ZodType<ProductCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductCreate$Outbound = ProductRecurringCreate$Outbound | ProductOneTimeCreate$Outbound;
/** @internal */
export declare const ProductCreate$outboundSchema: z.ZodType<ProductCreate$Outbound, z.ZodTypeDef, ProductCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductCreate$ {
    /** @deprecated use `ProductCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductCreate$Outbound, z.ZodTypeDef, ProductCreate>;
    /** @deprecated use `ProductCreate$Outbound` instead. */
    type Outbound = ProductCreate$Outbound;
}
export declare function productCreateToJSON(productCreate: ProductCreate): string;
export declare function productCreateFromJSON(jsonString: string): SafeParseResult<ProductCreate, SDKValidationError>;
//# sourceMappingURL=productcreate.d.ts.map