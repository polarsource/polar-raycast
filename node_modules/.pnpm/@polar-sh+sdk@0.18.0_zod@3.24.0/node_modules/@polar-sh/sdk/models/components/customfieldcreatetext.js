"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldCreateText$ = exports.CustomFieldCreateText$outboundSchema = exports.CustomFieldCreateText$inboundSchema = exports.CustomFieldCreateTextType$ = exports.CustomFieldCreateTextType$outboundSchema = exports.CustomFieldCreateTextType$inboundSchema = exports.CustomFieldCreateTextMetadata$ = exports.CustomFieldCreateTextMetadata$outboundSchema = exports.CustomFieldCreateTextMetadata$inboundSchema = exports.CustomFieldCreateTextType = void 0;
exports.customFieldCreateTextMetadataToJSON = customFieldCreateTextMetadataToJSON;
exports.customFieldCreateTextMetadataFromJSON = customFieldCreateTextMetadataFromJSON;
exports.customFieldCreateTextToJSON = customFieldCreateTextToJSON;
exports.customFieldCreateTextFromJSON = customFieldCreateTextFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const customfieldtextproperties_js_1 = require("./customfieldtextproperties.js");
exports.CustomFieldCreateTextType = {
    Text: "text",
};
/** @internal */
exports.CustomFieldCreateTextMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CustomFieldCreateTextMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateTextMetadata$;
(function (CustomFieldCreateTextMetadata$) {
    /** @deprecated use `CustomFieldCreateTextMetadata$inboundSchema` instead. */
    CustomFieldCreateTextMetadata$.inboundSchema = exports.CustomFieldCreateTextMetadata$inboundSchema;
    /** @deprecated use `CustomFieldCreateTextMetadata$outboundSchema` instead. */
    CustomFieldCreateTextMetadata$.outboundSchema = exports.CustomFieldCreateTextMetadata$outboundSchema;
})(CustomFieldCreateTextMetadata$ || (exports.CustomFieldCreateTextMetadata$ = CustomFieldCreateTextMetadata$ = {}));
function customFieldCreateTextMetadataToJSON(customFieldCreateTextMetadata) {
    return JSON.stringify(exports.CustomFieldCreateTextMetadata$outboundSchema.parse(customFieldCreateTextMetadata));
}
function customFieldCreateTextMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldCreateTextMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateTextMetadata' from JSON`);
}
/** @internal */
exports.CustomFieldCreateTextType$inboundSchema = z.nativeEnum(exports.CustomFieldCreateTextType);
/** @internal */
exports.CustomFieldCreateTextType$outboundSchema = exports.CustomFieldCreateTextType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateTextType$;
(function (CustomFieldCreateTextType$) {
    /** @deprecated use `CustomFieldCreateTextType$inboundSchema` instead. */
    CustomFieldCreateTextType$.inboundSchema = exports.CustomFieldCreateTextType$inboundSchema;
    /** @deprecated use `CustomFieldCreateTextType$outboundSchema` instead. */
    CustomFieldCreateTextType$.outboundSchema = exports.CustomFieldCreateTextType$outboundSchema;
})(CustomFieldCreateTextType$ || (exports.CustomFieldCreateTextType$ = CustomFieldCreateTextType$ = {}));
/** @internal */
exports.CustomFieldCreateText$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("text").optional(),
    slug: z.string(),
    name: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: customfieldtextproperties_js_1.CustomFieldTextProperties$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.CustomFieldCreateText$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("text").default("text"),
    slug: z.string(),
    name: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: customfieldtextproperties_js_1.CustomFieldTextProperties$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateText$;
(function (CustomFieldCreateText$) {
    /** @deprecated use `CustomFieldCreateText$inboundSchema` instead. */
    CustomFieldCreateText$.inboundSchema = exports.CustomFieldCreateText$inboundSchema;
    /** @deprecated use `CustomFieldCreateText$outboundSchema` instead. */
    CustomFieldCreateText$.outboundSchema = exports.CustomFieldCreateText$outboundSchema;
})(CustomFieldCreateText$ || (exports.CustomFieldCreateText$ = CustomFieldCreateText$ = {}));
function customFieldCreateTextToJSON(customFieldCreateText) {
    return JSON.stringify(exports.CustomFieldCreateText$outboundSchema.parse(customFieldCreateText));
}
function customFieldCreateTextFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldCreateText$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateText' from JSON`);
}
//# sourceMappingURL=customfieldcreatetext.js.map