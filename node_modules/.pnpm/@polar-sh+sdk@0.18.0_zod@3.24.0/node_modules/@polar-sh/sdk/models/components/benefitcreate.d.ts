import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitAdsCreate, BenefitAdsCreate$Outbound } from "./benefitadscreate.js";
import { BenefitCustomCreate, BenefitCustomCreate$Outbound } from "./benefitcustomcreate.js";
import { BenefitDiscordCreate, BenefitDiscordCreate$Outbound } from "./benefitdiscordcreate.js";
import { BenefitDownloadablesCreate, BenefitDownloadablesCreate$Outbound } from "./benefitdownloadablescreate.js";
import { BenefitGitHubRepositoryCreate, BenefitGitHubRepositoryCreate$Outbound } from "./benefitgithubrepositorycreate.js";
import { BenefitLicenseKeysCreate, BenefitLicenseKeysCreate$Outbound } from "./benefitlicensekeyscreate.js";
export type BenefitCreate = (BenefitAdsCreate & {
    type: "ads";
}) | (BenefitDiscordCreate & {
    type: "discord";
}) | (BenefitDownloadablesCreate & {
    type: "downloadables";
}) | (BenefitGitHubRepositoryCreate & {
    type: "github_repository";
}) | (BenefitLicenseKeysCreate & {
    type: "license_keys";
}) | (BenefitCustomCreate & {
    type: "custom";
});
/** @internal */
export declare const BenefitCreate$inboundSchema: z.ZodType<BenefitCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitCreate$Outbound = (BenefitAdsCreate$Outbound & {
    type: "ads";
}) | (BenefitDiscordCreate$Outbound & {
    type: "discord";
}) | (BenefitDownloadablesCreate$Outbound & {
    type: "downloadables";
}) | (BenefitGitHubRepositoryCreate$Outbound & {
    type: "github_repository";
}) | (BenefitLicenseKeysCreate$Outbound & {
    type: "license_keys";
}) | (BenefitCustomCreate$Outbound & {
    type: "custom";
});
/** @internal */
export declare const BenefitCreate$outboundSchema: z.ZodType<BenefitCreate$Outbound, z.ZodTypeDef, BenefitCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitCreate$ {
    /** @deprecated use `BenefitCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitCreate$Outbound, z.ZodTypeDef, BenefitCreate>;
    /** @deprecated use `BenefitCreate$Outbound` instead. */
    type Outbound = BenefitCreate$Outbound;
}
export declare function benefitCreateToJSON(benefitCreate: BenefitCreate): string;
export declare function benefitCreateFromJSON(jsonString: string): SafeParseResult<BenefitCreate, SDKValidationError>;
//# sourceMappingURL=benefitcreate.d.ts.map