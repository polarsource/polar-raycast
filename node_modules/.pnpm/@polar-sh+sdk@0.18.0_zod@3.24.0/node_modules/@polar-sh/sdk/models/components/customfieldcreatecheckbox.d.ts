import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomFieldCheckboxProperties, CustomFieldCheckboxProperties$Outbound } from "./customfieldcheckboxproperties.js";
export type CustomFieldCreateCheckboxMetadata = string | number | boolean;
export declare const CustomFieldCreateCheckboxType: {
    readonly Checkbox: "checkbox";
};
export type CustomFieldCreateCheckboxType = ClosedEnum<typeof CustomFieldCreateCheckboxType>;
/**
 * Schema to create a custom field of type checkbox.
 */
export type CustomFieldCreateCheckbox = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | boolean;
    } | undefined;
    type?: "checkbox" | undefined;
    /**
     * Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens.
     */
    slug: string;
    /**
     * Name of the custom field.
     */
    name: string;
    /**
     * The ID of the organization owning the custom field. **Required unless you use an organization token.**
     */
    organizationId?: string | null | undefined;
    properties: CustomFieldCheckboxProperties;
};
/** @internal */
export declare const CustomFieldCreateCheckboxMetadata$inboundSchema: z.ZodType<CustomFieldCreateCheckboxMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldCreateCheckboxMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const CustomFieldCreateCheckboxMetadata$outboundSchema: z.ZodType<CustomFieldCreateCheckboxMetadata$Outbound, z.ZodTypeDef, CustomFieldCreateCheckboxMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldCreateCheckboxMetadata$ {
    /** @deprecated use `CustomFieldCreateCheckboxMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldCreateCheckboxMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldCreateCheckboxMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldCreateCheckboxMetadata$Outbound, z.ZodTypeDef, CustomFieldCreateCheckboxMetadata>;
    /** @deprecated use `CustomFieldCreateCheckboxMetadata$Outbound` instead. */
    type Outbound = CustomFieldCreateCheckboxMetadata$Outbound;
}
export declare function customFieldCreateCheckboxMetadataToJSON(customFieldCreateCheckboxMetadata: CustomFieldCreateCheckboxMetadata): string;
export declare function customFieldCreateCheckboxMetadataFromJSON(jsonString: string): SafeParseResult<CustomFieldCreateCheckboxMetadata, SDKValidationError>;
/** @internal */
export declare const CustomFieldCreateCheckboxType$inboundSchema: z.ZodNativeEnum<typeof CustomFieldCreateCheckboxType>;
/** @internal */
export declare const CustomFieldCreateCheckboxType$outboundSchema: z.ZodNativeEnum<typeof CustomFieldCreateCheckboxType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldCreateCheckboxType$ {
    /** @deprecated use `CustomFieldCreateCheckboxType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Checkbox: "checkbox";
    }>;
    /** @deprecated use `CustomFieldCreateCheckboxType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Checkbox: "checkbox";
    }>;
}
/** @internal */
export declare const CustomFieldCreateCheckbox$inboundSchema: z.ZodType<CustomFieldCreateCheckbox, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldCreateCheckbox$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | undefined;
    type: "checkbox";
    slug: string;
    name: string;
    organization_id?: string | null | undefined;
    properties: CustomFieldCheckboxProperties$Outbound;
};
/** @internal */
export declare const CustomFieldCreateCheckbox$outboundSchema: z.ZodType<CustomFieldCreateCheckbox$Outbound, z.ZodTypeDef, CustomFieldCreateCheckbox>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldCreateCheckbox$ {
    /** @deprecated use `CustomFieldCreateCheckbox$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldCreateCheckbox, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldCreateCheckbox$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldCreateCheckbox$Outbound, z.ZodTypeDef, CustomFieldCreateCheckbox>;
    /** @deprecated use `CustomFieldCreateCheckbox$Outbound` instead. */
    type Outbound = CustomFieldCreateCheckbox$Outbound;
}
export declare function customFieldCreateCheckboxToJSON(customFieldCreateCheckbox: CustomFieldCreateCheckbox): string;
export declare function customFieldCreateCheckboxFromJSON(jsonString: string): SafeParseResult<CustomFieldCreateCheckbox, SDKValidationError>;
//# sourceMappingURL=customfieldcreatecheckbox.d.ts.map