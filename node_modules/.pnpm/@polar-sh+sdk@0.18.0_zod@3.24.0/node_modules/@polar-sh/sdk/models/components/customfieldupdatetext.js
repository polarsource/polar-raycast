"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldUpdateText$ = exports.CustomFieldUpdateText$outboundSchema = exports.CustomFieldUpdateText$inboundSchema = exports.CustomFieldUpdateTextType$ = exports.CustomFieldUpdateTextType$outboundSchema = exports.CustomFieldUpdateTextType$inboundSchema = exports.CustomFieldUpdateTextMetadata$ = exports.CustomFieldUpdateTextMetadata$outboundSchema = exports.CustomFieldUpdateTextMetadata$inboundSchema = exports.CustomFieldUpdateTextType = void 0;
exports.customFieldUpdateTextMetadataToJSON = customFieldUpdateTextMetadataToJSON;
exports.customFieldUpdateTextMetadataFromJSON = customFieldUpdateTextMetadataFromJSON;
exports.customFieldUpdateTextToJSON = customFieldUpdateTextToJSON;
exports.customFieldUpdateTextFromJSON = customFieldUpdateTextFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const customfieldtextproperties_js_1 = require("./customfieldtextproperties.js");
exports.CustomFieldUpdateTextType = {
    Text: "text",
};
/** @internal */
exports.CustomFieldUpdateTextMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CustomFieldUpdateTextMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateTextMetadata$;
(function (CustomFieldUpdateTextMetadata$) {
    /** @deprecated use `CustomFieldUpdateTextMetadata$inboundSchema` instead. */
    CustomFieldUpdateTextMetadata$.inboundSchema = exports.CustomFieldUpdateTextMetadata$inboundSchema;
    /** @deprecated use `CustomFieldUpdateTextMetadata$outboundSchema` instead. */
    CustomFieldUpdateTextMetadata$.outboundSchema = exports.CustomFieldUpdateTextMetadata$outboundSchema;
})(CustomFieldUpdateTextMetadata$ || (exports.CustomFieldUpdateTextMetadata$ = CustomFieldUpdateTextMetadata$ = {}));
function customFieldUpdateTextMetadataToJSON(customFieldUpdateTextMetadata) {
    return JSON.stringify(exports.CustomFieldUpdateTextMetadata$outboundSchema.parse(customFieldUpdateTextMetadata));
}
function customFieldUpdateTextMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldUpdateTextMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateTextMetadata' from JSON`);
}
/** @internal */
exports.CustomFieldUpdateTextType$inboundSchema = z.nativeEnum(exports.CustomFieldUpdateTextType);
/** @internal */
exports.CustomFieldUpdateTextType$outboundSchema = exports.CustomFieldUpdateTextType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateTextType$;
(function (CustomFieldUpdateTextType$) {
    /** @deprecated use `CustomFieldUpdateTextType$inboundSchema` instead. */
    CustomFieldUpdateTextType$.inboundSchema = exports.CustomFieldUpdateTextType$inboundSchema;
    /** @deprecated use `CustomFieldUpdateTextType$outboundSchema` instead. */
    CustomFieldUpdateTextType$.outboundSchema = exports.CustomFieldUpdateTextType$outboundSchema;
})(CustomFieldUpdateTextType$ || (exports.CustomFieldUpdateTextType$ = CustomFieldUpdateTextType$ = {}));
/** @internal */
exports.CustomFieldUpdateText$inboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("text").optional(),
    properties: z.nullable(customfieldtextproperties_js_1.CustomFieldTextProperties$inboundSchema).optional(),
});
/** @internal */
exports.CustomFieldUpdateText$outboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("text").default("text"),
    properties: z.nullable(customfieldtextproperties_js_1.CustomFieldTextProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateText$;
(function (CustomFieldUpdateText$) {
    /** @deprecated use `CustomFieldUpdateText$inboundSchema` instead. */
    CustomFieldUpdateText$.inboundSchema = exports.CustomFieldUpdateText$inboundSchema;
    /** @deprecated use `CustomFieldUpdateText$outboundSchema` instead. */
    CustomFieldUpdateText$.outboundSchema = exports.CustomFieldUpdateText$outboundSchema;
})(CustomFieldUpdateText$ || (exports.CustomFieldUpdateText$ = CustomFieldUpdateText$ = {}));
function customFieldUpdateTextToJSON(customFieldUpdateText) {
    return JSON.stringify(exports.CustomFieldUpdateText$outboundSchema.parse(customFieldUpdateText));
}
function customFieldUpdateTextFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldUpdateText$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateText' from JSON`);
}
//# sourceMappingURL=customfieldupdatetext.js.map