"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiscountFixedRepeatDuration$ = exports.DiscountFixedRepeatDuration$outboundSchema = exports.DiscountFixedRepeatDuration$inboundSchema = exports.DiscountFixedRepeatDurationMetadata$ = exports.DiscountFixedRepeatDurationMetadata$outboundSchema = exports.DiscountFixedRepeatDurationMetadata$inboundSchema = void 0;
exports.discountFixedRepeatDurationMetadataToJSON = discountFixedRepeatDurationMetadataToJSON;
exports.discountFixedRepeatDurationMetadataFromJSON = discountFixedRepeatDurationMetadataFromJSON;
exports.discountFixedRepeatDurationToJSON = discountFixedRepeatDurationToJSON;
exports.discountFixedRepeatDurationFromJSON = discountFixedRepeatDurationFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const discountduration_js_1 = require("./discountduration.js");
const discountproduct_js_1 = require("./discountproduct.js");
const discounttype_js_1 = require("./discounttype.js");
/** @internal */
exports.DiscountFixedRepeatDurationMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.DiscountFixedRepeatDurationMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DiscountFixedRepeatDurationMetadata$;
(function (DiscountFixedRepeatDurationMetadata$) {
    /** @deprecated use `DiscountFixedRepeatDurationMetadata$inboundSchema` instead. */
    DiscountFixedRepeatDurationMetadata$.inboundSchema = exports.DiscountFixedRepeatDurationMetadata$inboundSchema;
    /** @deprecated use `DiscountFixedRepeatDurationMetadata$outboundSchema` instead. */
    DiscountFixedRepeatDurationMetadata$.outboundSchema = exports.DiscountFixedRepeatDurationMetadata$outboundSchema;
})(DiscountFixedRepeatDurationMetadata$ || (exports.DiscountFixedRepeatDurationMetadata$ = DiscountFixedRepeatDurationMetadata$ = {}));
function discountFixedRepeatDurationMetadataToJSON(discountFixedRepeatDurationMetadata) {
    return JSON.stringify(exports.DiscountFixedRepeatDurationMetadata$outboundSchema.parse(discountFixedRepeatDurationMetadata));
}
function discountFixedRepeatDurationMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DiscountFixedRepeatDurationMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountFixedRepeatDurationMetadata' from JSON`);
}
/** @internal */
exports.DiscountFixedRepeatDuration$inboundSchema = z.object({
    duration: discountduration_js_1.DiscountDuration$inboundSchema,
    duration_in_months: z.number().int(),
    type: discounttype_js_1.DiscountType$inboundSchema,
    amount: z.number().int(),
    currency: z.string(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    name: z.string(),
    code: z.nullable(z.string()),
    starts_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    ends_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    max_redemptions: z.nullable(z.number().int()),
    redemptions_count: z.number().int(),
    organization_id: z.string(),
    products: z.array(discountproduct_js_1.DiscountProduct$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "duration_in_months": "durationInMonths",
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "starts_at": "startsAt",
        "ends_at": "endsAt",
        "max_redemptions": "maxRedemptions",
        "redemptions_count": "redemptionsCount",
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.DiscountFixedRepeatDuration$outboundSchema = z.object({
    duration: discountduration_js_1.DiscountDuration$outboundSchema,
    durationInMonths: z.number().int(),
    type: discounttype_js_1.DiscountType$outboundSchema,
    amount: z.number().int(),
    currency: z.string(),
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    name: z.string(),
    code: z.nullable(z.string()),
    startsAt: z.nullable(z.date().transform(v => v.toISOString())),
    endsAt: z.nullable(z.date().transform(v => v.toISOString())),
    maxRedemptions: z.nullable(z.number().int()),
    redemptionsCount: z.number().int(),
    organizationId: z.string(),
    products: z.array(discountproduct_js_1.DiscountProduct$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        durationInMonths: "duration_in_months",
        createdAt: "created_at",
        modifiedAt: "modified_at",
        startsAt: "starts_at",
        endsAt: "ends_at",
        maxRedemptions: "max_redemptions",
        redemptionsCount: "redemptions_count",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DiscountFixedRepeatDuration$;
(function (DiscountFixedRepeatDuration$) {
    /** @deprecated use `DiscountFixedRepeatDuration$inboundSchema` instead. */
    DiscountFixedRepeatDuration$.inboundSchema = exports.DiscountFixedRepeatDuration$inboundSchema;
    /** @deprecated use `DiscountFixedRepeatDuration$outboundSchema` instead. */
    DiscountFixedRepeatDuration$.outboundSchema = exports.DiscountFixedRepeatDuration$outboundSchema;
})(DiscountFixedRepeatDuration$ || (exports.DiscountFixedRepeatDuration$ = DiscountFixedRepeatDuration$ = {}));
function discountFixedRepeatDurationToJSON(discountFixedRepeatDuration) {
    return JSON.stringify(exports.DiscountFixedRepeatDuration$outboundSchema.parse(discountFixedRepeatDuration));
}
function discountFixedRepeatDurationFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DiscountFixedRepeatDuration$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountFixedRepeatDuration' from JSON`);
}
//# sourceMappingURL=discountfixedrepeatduration.js.map