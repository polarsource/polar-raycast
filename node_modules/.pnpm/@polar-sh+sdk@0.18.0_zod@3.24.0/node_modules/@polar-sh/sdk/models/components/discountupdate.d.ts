import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { DiscountDuration } from "./discountduration.js";
import { DiscountType } from "./discounttype.js";
export type DiscountUpdateMetadata = string | number | boolean;
/**
 * Schema to update a discount.
 */
export type DiscountUpdate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    code?: string | null | undefined;
    startsAt?: Date | null | undefined;
    endsAt?: Date | null | undefined;
    maxRedemptions?: number | null | undefined;
    duration?: DiscountDuration | null | undefined;
    durationInMonths?: number | null | undefined;
    type?: DiscountType | null | undefined;
    amount?: number | null | undefined;
    currency?: string | null | undefined;
    basisPoints?: number | null | undefined;
    products?: Array<string> | null | undefined;
};
/** @internal */
export declare const DiscountUpdateMetadata$inboundSchema: z.ZodType<DiscountUpdateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type DiscountUpdateMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const DiscountUpdateMetadata$outboundSchema: z.ZodType<DiscountUpdateMetadata$Outbound, z.ZodTypeDef, DiscountUpdateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DiscountUpdateMetadata$ {
    /** @deprecated use `DiscountUpdateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DiscountUpdateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `DiscountUpdateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DiscountUpdateMetadata$Outbound, z.ZodTypeDef, DiscountUpdateMetadata>;
    /** @deprecated use `DiscountUpdateMetadata$Outbound` instead. */
    type Outbound = DiscountUpdateMetadata$Outbound;
}
export declare function discountUpdateMetadataToJSON(discountUpdateMetadata: DiscountUpdateMetadata): string;
export declare function discountUpdateMetadataFromJSON(jsonString: string): SafeParseResult<DiscountUpdateMetadata, SDKValidationError>;
/** @internal */
export declare const DiscountUpdate$inboundSchema: z.ZodType<DiscountUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type DiscountUpdate$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    code?: string | null | undefined;
    starts_at?: string | null | undefined;
    ends_at?: string | null | undefined;
    max_redemptions?: number | null | undefined;
    duration?: string | null | undefined;
    duration_in_months?: number | null | undefined;
    type?: string | null | undefined;
    amount?: number | null | undefined;
    currency: string | null;
    basis_points?: number | null | undefined;
    products?: Array<string> | null | undefined;
};
/** @internal */
export declare const DiscountUpdate$outboundSchema: z.ZodType<DiscountUpdate$Outbound, z.ZodTypeDef, DiscountUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DiscountUpdate$ {
    /** @deprecated use `DiscountUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DiscountUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `DiscountUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DiscountUpdate$Outbound, z.ZodTypeDef, DiscountUpdate>;
    /** @deprecated use `DiscountUpdate$Outbound` instead. */
    type Outbound = DiscountUpdate$Outbound;
}
export declare function discountUpdateToJSON(discountUpdate: DiscountUpdate): string;
export declare function discountUpdateFromJSON(jsonString: string): SafeParseResult<DiscountUpdate, SDKValidationError>;
//# sourceMappingURL=discountupdate.d.ts.map