import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UserAdvertisementCampaignEnable = {
    /**
     * The benefit ID.
     */
    benefitId: string;
};
/** @internal */
export declare const UserAdvertisementCampaignEnable$inboundSchema: z.ZodType<UserAdvertisementCampaignEnable, z.ZodTypeDef, unknown>;
/** @internal */
export type UserAdvertisementCampaignEnable$Outbound = {
    benefit_id: string;
};
/** @internal */
export declare const UserAdvertisementCampaignEnable$outboundSchema: z.ZodType<UserAdvertisementCampaignEnable$Outbound, z.ZodTypeDef, UserAdvertisementCampaignEnable>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UserAdvertisementCampaignEnable$ {
    /** @deprecated use `UserAdvertisementCampaignEnable$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UserAdvertisementCampaignEnable, z.ZodTypeDef, unknown>;
    /** @deprecated use `UserAdvertisementCampaignEnable$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UserAdvertisementCampaignEnable$Outbound, z.ZodTypeDef, UserAdvertisementCampaignEnable>;
    /** @deprecated use `UserAdvertisementCampaignEnable$Outbound` instead. */
    type Outbound = UserAdvertisementCampaignEnable$Outbound;
}
export declare function userAdvertisementCampaignEnableToJSON(userAdvertisementCampaignEnable: UserAdvertisementCampaignEnable): string;
export declare function userAdvertisementCampaignEnableFromJSON(jsonString: string): SafeParseResult<UserAdvertisementCampaignEnable, SDKValidationError>;
//# sourceMappingURL=useradvertisementcampaignenable.d.ts.map