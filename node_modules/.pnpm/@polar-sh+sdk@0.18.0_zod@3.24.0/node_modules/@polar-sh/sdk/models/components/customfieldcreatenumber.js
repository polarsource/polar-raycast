"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldCreateNumber$ = exports.CustomFieldCreateNumber$outboundSchema = exports.CustomFieldCreateNumber$inboundSchema = exports.CustomFieldCreateNumberType$ = exports.CustomFieldCreateNumberType$outboundSchema = exports.CustomFieldCreateNumberType$inboundSchema = exports.CustomFieldCreateNumberMetadata$ = exports.CustomFieldCreateNumberMetadata$outboundSchema = exports.CustomFieldCreateNumberMetadata$inboundSchema = exports.CustomFieldCreateNumberType = void 0;
exports.customFieldCreateNumberMetadataToJSON = customFieldCreateNumberMetadataToJSON;
exports.customFieldCreateNumberMetadataFromJSON = customFieldCreateNumberMetadataFromJSON;
exports.customFieldCreateNumberToJSON = customFieldCreateNumberToJSON;
exports.customFieldCreateNumberFromJSON = customFieldCreateNumberFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const customfieldnumberproperties_js_1 = require("./customfieldnumberproperties.js");
exports.CustomFieldCreateNumberType = {
    Number: "number",
};
/** @internal */
exports.CustomFieldCreateNumberMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CustomFieldCreateNumberMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateNumberMetadata$;
(function (CustomFieldCreateNumberMetadata$) {
    /** @deprecated use `CustomFieldCreateNumberMetadata$inboundSchema` instead. */
    CustomFieldCreateNumberMetadata$.inboundSchema = exports.CustomFieldCreateNumberMetadata$inboundSchema;
    /** @deprecated use `CustomFieldCreateNumberMetadata$outboundSchema` instead. */
    CustomFieldCreateNumberMetadata$.outboundSchema = exports.CustomFieldCreateNumberMetadata$outboundSchema;
})(CustomFieldCreateNumberMetadata$ || (exports.CustomFieldCreateNumberMetadata$ = CustomFieldCreateNumberMetadata$ = {}));
function customFieldCreateNumberMetadataToJSON(customFieldCreateNumberMetadata) {
    return JSON.stringify(exports.CustomFieldCreateNumberMetadata$outboundSchema.parse(customFieldCreateNumberMetadata));
}
function customFieldCreateNumberMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldCreateNumberMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateNumberMetadata' from JSON`);
}
/** @internal */
exports.CustomFieldCreateNumberType$inboundSchema = z.nativeEnum(exports.CustomFieldCreateNumberType);
/** @internal */
exports.CustomFieldCreateNumberType$outboundSchema = exports.CustomFieldCreateNumberType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateNumberType$;
(function (CustomFieldCreateNumberType$) {
    /** @deprecated use `CustomFieldCreateNumberType$inboundSchema` instead. */
    CustomFieldCreateNumberType$.inboundSchema = exports.CustomFieldCreateNumberType$inboundSchema;
    /** @deprecated use `CustomFieldCreateNumberType$outboundSchema` instead. */
    CustomFieldCreateNumberType$.outboundSchema = exports.CustomFieldCreateNumberType$outboundSchema;
})(CustomFieldCreateNumberType$ || (exports.CustomFieldCreateNumberType$ = CustomFieldCreateNumberType$ = {}));
/** @internal */
exports.CustomFieldCreateNumber$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("number").optional(),
    slug: z.string(),
    name: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: customfieldnumberproperties_js_1.CustomFieldNumberProperties$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.CustomFieldCreateNumber$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("number").default("number"),
    slug: z.string(),
    name: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: customfieldnumberproperties_js_1.CustomFieldNumberProperties$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateNumber$;
(function (CustomFieldCreateNumber$) {
    /** @deprecated use `CustomFieldCreateNumber$inboundSchema` instead. */
    CustomFieldCreateNumber$.inboundSchema = exports.CustomFieldCreateNumber$inboundSchema;
    /** @deprecated use `CustomFieldCreateNumber$outboundSchema` instead. */
    CustomFieldCreateNumber$.outboundSchema = exports.CustomFieldCreateNumber$outboundSchema;
})(CustomFieldCreateNumber$ || (exports.CustomFieldCreateNumber$ = CustomFieldCreateNumber$ = {}));
function customFieldCreateNumberToJSON(customFieldCreateNumber) {
    return JSON.stringify(exports.CustomFieldCreateNumber$outboundSchema.parse(customFieldCreateNumber));
}
function customFieldCreateNumberFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldCreateNumber$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateNumber' from JSON`);
}
//# sourceMappingURL=customfieldcreatenumber.js.map