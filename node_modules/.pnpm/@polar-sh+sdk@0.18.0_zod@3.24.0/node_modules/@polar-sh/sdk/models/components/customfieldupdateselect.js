"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldUpdateSelect$ = exports.CustomFieldUpdateSelect$outboundSchema = exports.CustomFieldUpdateSelect$inboundSchema = exports.CustomFieldUpdateSelectType$ = exports.CustomFieldUpdateSelectType$outboundSchema = exports.CustomFieldUpdateSelectType$inboundSchema = exports.CustomFieldUpdateSelectMetadata$ = exports.CustomFieldUpdateSelectMetadata$outboundSchema = exports.CustomFieldUpdateSelectMetadata$inboundSchema = exports.CustomFieldUpdateSelectType = void 0;
exports.customFieldUpdateSelectMetadataToJSON = customFieldUpdateSelectMetadataToJSON;
exports.customFieldUpdateSelectMetadataFromJSON = customFieldUpdateSelectMetadataFromJSON;
exports.customFieldUpdateSelectToJSON = customFieldUpdateSelectToJSON;
exports.customFieldUpdateSelectFromJSON = customFieldUpdateSelectFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const customfieldselectproperties_js_1 = require("./customfieldselectproperties.js");
exports.CustomFieldUpdateSelectType = {
    Select: "select",
};
/** @internal */
exports.CustomFieldUpdateSelectMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CustomFieldUpdateSelectMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateSelectMetadata$;
(function (CustomFieldUpdateSelectMetadata$) {
    /** @deprecated use `CustomFieldUpdateSelectMetadata$inboundSchema` instead. */
    CustomFieldUpdateSelectMetadata$.inboundSchema = exports.CustomFieldUpdateSelectMetadata$inboundSchema;
    /** @deprecated use `CustomFieldUpdateSelectMetadata$outboundSchema` instead. */
    CustomFieldUpdateSelectMetadata$.outboundSchema = exports.CustomFieldUpdateSelectMetadata$outboundSchema;
})(CustomFieldUpdateSelectMetadata$ || (exports.CustomFieldUpdateSelectMetadata$ = CustomFieldUpdateSelectMetadata$ = {}));
function customFieldUpdateSelectMetadataToJSON(customFieldUpdateSelectMetadata) {
    return JSON.stringify(exports.CustomFieldUpdateSelectMetadata$outboundSchema.parse(customFieldUpdateSelectMetadata));
}
function customFieldUpdateSelectMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldUpdateSelectMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateSelectMetadata' from JSON`);
}
/** @internal */
exports.CustomFieldUpdateSelectType$inboundSchema = z.nativeEnum(exports.CustomFieldUpdateSelectType);
/** @internal */
exports.CustomFieldUpdateSelectType$outboundSchema = exports.CustomFieldUpdateSelectType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateSelectType$;
(function (CustomFieldUpdateSelectType$) {
    /** @deprecated use `CustomFieldUpdateSelectType$inboundSchema` instead. */
    CustomFieldUpdateSelectType$.inboundSchema = exports.CustomFieldUpdateSelectType$inboundSchema;
    /** @deprecated use `CustomFieldUpdateSelectType$outboundSchema` instead. */
    CustomFieldUpdateSelectType$.outboundSchema = exports.CustomFieldUpdateSelectType$outboundSchema;
})(CustomFieldUpdateSelectType$ || (exports.CustomFieldUpdateSelectType$ = CustomFieldUpdateSelectType$ = {}));
/** @internal */
exports.CustomFieldUpdateSelect$inboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("select").optional(),
    properties: z.nullable(customfieldselectproperties_js_1.CustomFieldSelectProperties$inboundSchema).optional(),
});
/** @internal */
exports.CustomFieldUpdateSelect$outboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("select").default("select"),
    properties: z.nullable(customfieldselectproperties_js_1.CustomFieldSelectProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateSelect$;
(function (CustomFieldUpdateSelect$) {
    /** @deprecated use `CustomFieldUpdateSelect$inboundSchema` instead. */
    CustomFieldUpdateSelect$.inboundSchema = exports.CustomFieldUpdateSelect$inboundSchema;
    /** @deprecated use `CustomFieldUpdateSelect$outboundSchema` instead. */
    CustomFieldUpdateSelect$.outboundSchema = exports.CustomFieldUpdateSelect$outboundSchema;
})(CustomFieldUpdateSelect$ || (exports.CustomFieldUpdateSelect$ = CustomFieldUpdateSelect$ = {}));
function customFieldUpdateSelectToJSON(customFieldUpdateSelect) {
    return JSON.stringify(exports.CustomFieldUpdateSelect$outboundSchema.parse(customFieldUpdateSelect));
}
function customFieldUpdateSelectFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldUpdateSelect$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateSelect' from JSON`);
}
//# sourceMappingURL=customfieldupdateselect.js.map