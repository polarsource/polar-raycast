import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomFieldNumberProperties, CustomFieldNumberProperties$Outbound } from "./customfieldnumberproperties.js";
export type CustomFieldUpdateNumberMetadata = string | number | boolean;
export declare const CustomFieldUpdateNumberType: {
    readonly Number: "number";
};
export type CustomFieldUpdateNumberType = ClosedEnum<typeof CustomFieldUpdateNumberType>;
/**
 * Schema to update a custom field of type number.
 */
export type CustomFieldUpdateNumber = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    slug?: string | null | undefined;
    type?: "number" | undefined;
    properties?: CustomFieldNumberProperties | null | undefined;
};
/** @internal */
export declare const CustomFieldUpdateNumberMetadata$inboundSchema: z.ZodType<CustomFieldUpdateNumberMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldUpdateNumberMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const CustomFieldUpdateNumberMetadata$outboundSchema: z.ZodType<CustomFieldUpdateNumberMetadata$Outbound, z.ZodTypeDef, CustomFieldUpdateNumberMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateNumberMetadata$ {
    /** @deprecated use `CustomFieldUpdateNumberMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldUpdateNumberMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldUpdateNumberMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldUpdateNumberMetadata$Outbound, z.ZodTypeDef, CustomFieldUpdateNumberMetadata>;
    /** @deprecated use `CustomFieldUpdateNumberMetadata$Outbound` instead. */
    type Outbound = CustomFieldUpdateNumberMetadata$Outbound;
}
export declare function customFieldUpdateNumberMetadataToJSON(customFieldUpdateNumberMetadata: CustomFieldUpdateNumberMetadata): string;
export declare function customFieldUpdateNumberMetadataFromJSON(jsonString: string): SafeParseResult<CustomFieldUpdateNumberMetadata, SDKValidationError>;
/** @internal */
export declare const CustomFieldUpdateNumberType$inboundSchema: z.ZodNativeEnum<typeof CustomFieldUpdateNumberType>;
/** @internal */
export declare const CustomFieldUpdateNumberType$outboundSchema: z.ZodNativeEnum<typeof CustomFieldUpdateNumberType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateNumberType$ {
    /** @deprecated use `CustomFieldUpdateNumberType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Number: "number";
    }>;
    /** @deprecated use `CustomFieldUpdateNumberType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Number: "number";
    }>;
}
/** @internal */
export declare const CustomFieldUpdateNumber$inboundSchema: z.ZodType<CustomFieldUpdateNumber, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldUpdateNumber$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    slug?: string | null | undefined;
    type: "number";
    properties?: CustomFieldNumberProperties$Outbound | null | undefined;
};
/** @internal */
export declare const CustomFieldUpdateNumber$outboundSchema: z.ZodType<CustomFieldUpdateNumber$Outbound, z.ZodTypeDef, CustomFieldUpdateNumber>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateNumber$ {
    /** @deprecated use `CustomFieldUpdateNumber$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldUpdateNumber, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldUpdateNumber$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldUpdateNumber$Outbound, z.ZodTypeDef, CustomFieldUpdateNumber>;
    /** @deprecated use `CustomFieldUpdateNumber$Outbound` instead. */
    type Outbound = CustomFieldUpdateNumber$Outbound;
}
export declare function customFieldUpdateNumberToJSON(customFieldUpdateNumber: CustomFieldUpdateNumber): string;
export declare function customFieldUpdateNumberFromJSON(jsonString: string): SafeParseResult<CustomFieldUpdateNumber, SDKValidationError>;
//# sourceMappingURL=customfieldupdatenumber.d.ts.map