import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { AttachedCustomFieldCreate, AttachedCustomFieldCreate$Outbound } from "./attachedcustomfieldcreate.js";
import { ProductPriceRecurringFixedCreate, ProductPriceRecurringFixedCreate$Outbound } from "./productpricerecurringfixedcreate.js";
import { ProductPriceRecurringFreeCreate, ProductPriceRecurringFreeCreate$Outbound } from "./productpricerecurringfreecreate.js";
export type ProductRecurringCreateMetadata = string | number | boolean;
/**
 * List of available prices for this product.
 */
export type ProductRecurringCreatePrices = Array<ProductPriceRecurringFixedCreate> | Array<ProductPriceRecurringFreeCreate>;
/**
 * Schema to create a recurring product, i.e. a subscription.
 */
export type ProductRecurringCreate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | boolean;
    } | undefined;
    /**
     * The name of the product.
     */
    name: string;
    /**
     * The description of the product.
     */
    description?: string | null | undefined;
    /**
     * List of available prices for this product.
     */
    prices: Array<ProductPriceRecurringFixedCreate> | Array<ProductPriceRecurringFreeCreate>;
    /**
     * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.
     */
    medias?: Array<string> | null | undefined;
    /**
     * List of custom fields to attach.
     */
    attachedCustomFields?: Array<AttachedCustomFieldCreate> | undefined;
    /**
     * The ID of the organization owning the product. **Required unless you use an organization token.**
     */
    organizationId?: string | null | undefined;
};
/** @internal */
export declare const ProductRecurringCreateMetadata$inboundSchema: z.ZodType<ProductRecurringCreateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductRecurringCreateMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const ProductRecurringCreateMetadata$outboundSchema: z.ZodType<ProductRecurringCreateMetadata$Outbound, z.ZodTypeDef, ProductRecurringCreateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductRecurringCreateMetadata$ {
    /** @deprecated use `ProductRecurringCreateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductRecurringCreateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductRecurringCreateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductRecurringCreateMetadata$Outbound, z.ZodTypeDef, ProductRecurringCreateMetadata>;
    /** @deprecated use `ProductRecurringCreateMetadata$Outbound` instead. */
    type Outbound = ProductRecurringCreateMetadata$Outbound;
}
export declare function productRecurringCreateMetadataToJSON(productRecurringCreateMetadata: ProductRecurringCreateMetadata): string;
export declare function productRecurringCreateMetadataFromJSON(jsonString: string): SafeParseResult<ProductRecurringCreateMetadata, SDKValidationError>;
/** @internal */
export declare const ProductRecurringCreatePrices$inboundSchema: z.ZodType<ProductRecurringCreatePrices, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductRecurringCreatePrices$Outbound = Array<ProductPriceRecurringFixedCreate$Outbound> | Array<ProductPriceRecurringFreeCreate$Outbound>;
/** @internal */
export declare const ProductRecurringCreatePrices$outboundSchema: z.ZodType<ProductRecurringCreatePrices$Outbound, z.ZodTypeDef, ProductRecurringCreatePrices>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductRecurringCreatePrices$ {
    /** @deprecated use `ProductRecurringCreatePrices$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductRecurringCreatePrices, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductRecurringCreatePrices$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductRecurringCreatePrices$Outbound, z.ZodTypeDef, ProductRecurringCreatePrices>;
    /** @deprecated use `ProductRecurringCreatePrices$Outbound` instead. */
    type Outbound = ProductRecurringCreatePrices$Outbound;
}
export declare function productRecurringCreatePricesToJSON(productRecurringCreatePrices: ProductRecurringCreatePrices): string;
export declare function productRecurringCreatePricesFromJSON(jsonString: string): SafeParseResult<ProductRecurringCreatePrices, SDKValidationError>;
/** @internal */
export declare const ProductRecurringCreate$inboundSchema: z.ZodType<ProductRecurringCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductRecurringCreate$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | undefined;
    name: string;
    description?: string | null | undefined;
    prices: Array<ProductPriceRecurringFixedCreate$Outbound> | Array<ProductPriceRecurringFreeCreate$Outbound>;
    medias?: Array<string> | null | undefined;
    attached_custom_fields?: Array<AttachedCustomFieldCreate$Outbound> | undefined;
    organization_id?: string | null | undefined;
};
/** @internal */
export declare const ProductRecurringCreate$outboundSchema: z.ZodType<ProductRecurringCreate$Outbound, z.ZodTypeDef, ProductRecurringCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductRecurringCreate$ {
    /** @deprecated use `ProductRecurringCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductRecurringCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductRecurringCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductRecurringCreate$Outbound, z.ZodTypeDef, ProductRecurringCreate>;
    /** @deprecated use `ProductRecurringCreate$Outbound` instead. */
    type Outbound = ProductRecurringCreate$Outbound;
}
export declare function productRecurringCreateToJSON(productRecurringCreate: ProductRecurringCreate): string;
export declare function productRecurringCreateFromJSON(jsonString: string): SafeParseResult<ProductRecurringCreate, SDKValidationError>;
//# sourceMappingURL=productrecurringcreate.d.ts.map