"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldCreateDate$ = exports.CustomFieldCreateDate$outboundSchema = exports.CustomFieldCreateDate$inboundSchema = exports.CustomFieldCreateDateType$ = exports.CustomFieldCreateDateType$outboundSchema = exports.CustomFieldCreateDateType$inboundSchema = exports.CustomFieldCreateDateMetadata$ = exports.CustomFieldCreateDateMetadata$outboundSchema = exports.CustomFieldCreateDateMetadata$inboundSchema = exports.CustomFieldCreateDateType = void 0;
exports.customFieldCreateDateMetadataToJSON = customFieldCreateDateMetadataToJSON;
exports.customFieldCreateDateMetadataFromJSON = customFieldCreateDateMetadataFromJSON;
exports.customFieldCreateDateToJSON = customFieldCreateDateToJSON;
exports.customFieldCreateDateFromJSON = customFieldCreateDateFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const customfielddateproperties_js_1 = require("./customfielddateproperties.js");
exports.CustomFieldCreateDateType = {
    Date: "date",
};
/** @internal */
exports.CustomFieldCreateDateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CustomFieldCreateDateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateDateMetadata$;
(function (CustomFieldCreateDateMetadata$) {
    /** @deprecated use `CustomFieldCreateDateMetadata$inboundSchema` instead. */
    CustomFieldCreateDateMetadata$.inboundSchema = exports.CustomFieldCreateDateMetadata$inboundSchema;
    /** @deprecated use `CustomFieldCreateDateMetadata$outboundSchema` instead. */
    CustomFieldCreateDateMetadata$.outboundSchema = exports.CustomFieldCreateDateMetadata$outboundSchema;
})(CustomFieldCreateDateMetadata$ || (exports.CustomFieldCreateDateMetadata$ = CustomFieldCreateDateMetadata$ = {}));
function customFieldCreateDateMetadataToJSON(customFieldCreateDateMetadata) {
    return JSON.stringify(exports.CustomFieldCreateDateMetadata$outboundSchema.parse(customFieldCreateDateMetadata));
}
function customFieldCreateDateMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldCreateDateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateDateMetadata' from JSON`);
}
/** @internal */
exports.CustomFieldCreateDateType$inboundSchema = z.nativeEnum(exports.CustomFieldCreateDateType);
/** @internal */
exports.CustomFieldCreateDateType$outboundSchema = exports.CustomFieldCreateDateType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateDateType$;
(function (CustomFieldCreateDateType$) {
    /** @deprecated use `CustomFieldCreateDateType$inboundSchema` instead. */
    CustomFieldCreateDateType$.inboundSchema = exports.CustomFieldCreateDateType$inboundSchema;
    /** @deprecated use `CustomFieldCreateDateType$outboundSchema` instead. */
    CustomFieldCreateDateType$.outboundSchema = exports.CustomFieldCreateDateType$outboundSchema;
})(CustomFieldCreateDateType$ || (exports.CustomFieldCreateDateType$ = CustomFieldCreateDateType$ = {}));
/** @internal */
exports.CustomFieldCreateDate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("date").optional(),
    slug: z.string(),
    name: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: customfielddateproperties_js_1.CustomFieldDateProperties$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.CustomFieldCreateDate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("date").default("date"),
    slug: z.string(),
    name: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: customfielddateproperties_js_1.CustomFieldDateProperties$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldCreateDate$;
(function (CustomFieldCreateDate$) {
    /** @deprecated use `CustomFieldCreateDate$inboundSchema` instead. */
    CustomFieldCreateDate$.inboundSchema = exports.CustomFieldCreateDate$inboundSchema;
    /** @deprecated use `CustomFieldCreateDate$outboundSchema` instead. */
    CustomFieldCreateDate$.outboundSchema = exports.CustomFieldCreateDate$outboundSchema;
})(CustomFieldCreateDate$ || (exports.CustomFieldCreateDate$ = CustomFieldCreateDate$ = {}));
function customFieldCreateDateToJSON(customFieldCreateDate) {
    return JSON.stringify(exports.CustomFieldCreateDate$outboundSchema.parse(customFieldCreateDate));
}
function customFieldCreateDateFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldCreateDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateDate' from JSON`);
}
//# sourceMappingURL=customfieldcreatedate.js.map