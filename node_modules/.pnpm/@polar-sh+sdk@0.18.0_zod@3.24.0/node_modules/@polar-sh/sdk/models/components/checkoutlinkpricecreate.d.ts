import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CheckoutLinkPriceCreateMetadata = string | number | boolean;
/**
 * Payment processor to use. Currently only Stripe is supported.
 */
export declare const CheckoutLinkPriceCreatePaymentProcessor: {
    readonly Stripe: "stripe";
};
/**
 * Payment processor to use. Currently only Stripe is supported.
 */
export type CheckoutLinkPriceCreatePaymentProcessor = ClosedEnum<typeof CheckoutLinkPriceCreatePaymentProcessor>;
export type CheckoutLinkPriceCreate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | boolean;
    } | undefined;
    /**
     * Payment processor to use. Currently only Stripe is supported.
     */
    paymentProcessor?: "stripe" | undefined;
    /**
     * Optional label to distinguish links internally
     */
    label?: string | null | undefined;
    /**
     * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.
     */
    allowDiscountCodes?: boolean | undefined;
    /**
     * ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored.
     */
    discountId?: string | null | undefined;
    /**
     * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.
     */
    successUrl?: string | null | undefined;
    /**
     * ID of the product price to checkout.
     */
    productPriceId: string;
};
/** @internal */
export declare const CheckoutLinkPriceCreateMetadata$inboundSchema: z.ZodType<CheckoutLinkPriceCreateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutLinkPriceCreateMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const CheckoutLinkPriceCreateMetadata$outboundSchema: z.ZodType<CheckoutLinkPriceCreateMetadata$Outbound, z.ZodTypeDef, CheckoutLinkPriceCreateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutLinkPriceCreateMetadata$ {
    /** @deprecated use `CheckoutLinkPriceCreateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutLinkPriceCreateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutLinkPriceCreateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutLinkPriceCreateMetadata$Outbound, z.ZodTypeDef, CheckoutLinkPriceCreateMetadata>;
    /** @deprecated use `CheckoutLinkPriceCreateMetadata$Outbound` instead. */
    type Outbound = CheckoutLinkPriceCreateMetadata$Outbound;
}
export declare function checkoutLinkPriceCreateMetadataToJSON(checkoutLinkPriceCreateMetadata: CheckoutLinkPriceCreateMetadata): string;
export declare function checkoutLinkPriceCreateMetadataFromJSON(jsonString: string): SafeParseResult<CheckoutLinkPriceCreateMetadata, SDKValidationError>;
/** @internal */
export declare const CheckoutLinkPriceCreatePaymentProcessor$inboundSchema: z.ZodNativeEnum<typeof CheckoutLinkPriceCreatePaymentProcessor>;
/** @internal */
export declare const CheckoutLinkPriceCreatePaymentProcessor$outboundSchema: z.ZodNativeEnum<typeof CheckoutLinkPriceCreatePaymentProcessor>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutLinkPriceCreatePaymentProcessor$ {
    /** @deprecated use `CheckoutLinkPriceCreatePaymentProcessor$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Stripe: "stripe";
    }>;
    /** @deprecated use `CheckoutLinkPriceCreatePaymentProcessor$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Stripe: "stripe";
    }>;
}
/** @internal */
export declare const CheckoutLinkPriceCreate$inboundSchema: z.ZodType<CheckoutLinkPriceCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutLinkPriceCreate$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | undefined;
    payment_processor: "stripe";
    label?: string | null | undefined;
    allow_discount_codes: boolean;
    discount_id?: string | null | undefined;
    success_url?: string | null | undefined;
    product_price_id: string;
};
/** @internal */
export declare const CheckoutLinkPriceCreate$outboundSchema: z.ZodType<CheckoutLinkPriceCreate$Outbound, z.ZodTypeDef, CheckoutLinkPriceCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutLinkPriceCreate$ {
    /** @deprecated use `CheckoutLinkPriceCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutLinkPriceCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutLinkPriceCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutLinkPriceCreate$Outbound, z.ZodTypeDef, CheckoutLinkPriceCreate>;
    /** @deprecated use `CheckoutLinkPriceCreate$Outbound` instead. */
    type Outbound = CheckoutLinkPriceCreate$Outbound;
}
export declare function checkoutLinkPriceCreateToJSON(checkoutLinkPriceCreate: CheckoutLinkPriceCreate): string;
export declare function checkoutLinkPriceCreateFromJSON(jsonString: string): SafeParseResult<CheckoutLinkPriceCreate, SDKValidationError>;
//# sourceMappingURL=checkoutlinkpricecreate.d.ts.map