import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomFieldTextProperties, CustomFieldTextProperties$Outbound } from "./customfieldtextproperties.js";
export type CustomFieldUpdateTextMetadata = string | number | boolean;
export declare const CustomFieldUpdateTextType: {
    readonly Text: "text";
};
export type CustomFieldUpdateTextType = ClosedEnum<typeof CustomFieldUpdateTextType>;
/**
 * Schema to update a custom field of type text.
 */
export type CustomFieldUpdateText = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    slug?: string | null | undefined;
    type?: "text" | undefined;
    properties?: CustomFieldTextProperties | null | undefined;
};
/** @internal */
export declare const CustomFieldUpdateTextMetadata$inboundSchema: z.ZodType<CustomFieldUpdateTextMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldUpdateTextMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const CustomFieldUpdateTextMetadata$outboundSchema: z.ZodType<CustomFieldUpdateTextMetadata$Outbound, z.ZodTypeDef, CustomFieldUpdateTextMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateTextMetadata$ {
    /** @deprecated use `CustomFieldUpdateTextMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldUpdateTextMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldUpdateTextMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldUpdateTextMetadata$Outbound, z.ZodTypeDef, CustomFieldUpdateTextMetadata>;
    /** @deprecated use `CustomFieldUpdateTextMetadata$Outbound` instead. */
    type Outbound = CustomFieldUpdateTextMetadata$Outbound;
}
export declare function customFieldUpdateTextMetadataToJSON(customFieldUpdateTextMetadata: CustomFieldUpdateTextMetadata): string;
export declare function customFieldUpdateTextMetadataFromJSON(jsonString: string): SafeParseResult<CustomFieldUpdateTextMetadata, SDKValidationError>;
/** @internal */
export declare const CustomFieldUpdateTextType$inboundSchema: z.ZodNativeEnum<typeof CustomFieldUpdateTextType>;
/** @internal */
export declare const CustomFieldUpdateTextType$outboundSchema: z.ZodNativeEnum<typeof CustomFieldUpdateTextType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateTextType$ {
    /** @deprecated use `CustomFieldUpdateTextType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Text: "text";
    }>;
    /** @deprecated use `CustomFieldUpdateTextType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Text: "text";
    }>;
}
/** @internal */
export declare const CustomFieldUpdateText$inboundSchema: z.ZodType<CustomFieldUpdateText, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldUpdateText$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    slug?: string | null | undefined;
    type: "text";
    properties?: CustomFieldTextProperties$Outbound | null | undefined;
};
/** @internal */
export declare const CustomFieldUpdateText$outboundSchema: z.ZodType<CustomFieldUpdateText$Outbound, z.ZodTypeDef, CustomFieldUpdateText>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateText$ {
    /** @deprecated use `CustomFieldUpdateText$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldUpdateText, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldUpdateText$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldUpdateText$Outbound, z.ZodTypeDef, CustomFieldUpdateText>;
    /** @deprecated use `CustomFieldUpdateText$Outbound` instead. */
    type Outbound = CustomFieldUpdateText$Outbound;
}
export declare function customFieldUpdateTextToJSON(customFieldUpdateText: CustomFieldUpdateText): string;
export declare function customFieldUpdateTextFromJSON(jsonString: string): SafeParseResult<CustomFieldUpdateText, SDKValidationError>;
//# sourceMappingURL=customfieldupdatetext.d.ts.map