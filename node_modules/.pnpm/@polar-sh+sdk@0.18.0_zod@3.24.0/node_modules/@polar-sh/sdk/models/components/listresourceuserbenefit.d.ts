import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitAdsSubscriber, BenefitAdsSubscriber$Outbound } from "./benefitadssubscriber.js";
import { BenefitCustomSubscriber, BenefitCustomSubscriber$Outbound } from "./benefitcustomsubscriber.js";
import { BenefitDiscordSubscriber, BenefitDiscordSubscriber$Outbound } from "./benefitdiscordsubscriber.js";
import { BenefitDownloadablesSubscriber, BenefitDownloadablesSubscriber$Outbound } from "./benefitdownloadablessubscriber.js";
import { BenefitGitHubRepositorySubscriber, BenefitGitHubRepositorySubscriber$Outbound } from "./benefitgithubrepositorysubscriber.js";
import { BenefitLicenseKeysSubscriber, BenefitLicenseKeysSubscriber$Outbound } from "./benefitlicensekeyssubscriber.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
export type UserBenefit = (BenefitAdsSubscriber & {
    type: "ads";
}) | (BenefitCustomSubscriber & {
    type: "custom";
}) | (BenefitDiscordSubscriber & {
    type: "discord";
}) | (BenefitDownloadablesSubscriber & {
    type: "downloadables";
}) | (BenefitGitHubRepositorySubscriber & {
    type: "github_repository";
}) | (BenefitLicenseKeysSubscriber & {
    type: "license_keys";
});
export type ListResourceUserBenefit = {
    items: Array<(BenefitAdsSubscriber & {
        type: "ads";
    }) | (BenefitCustomSubscriber & {
        type: "custom";
    }) | (BenefitDiscordSubscriber & {
        type: "discord";
    }) | (BenefitDownloadablesSubscriber & {
        type: "downloadables";
    }) | (BenefitGitHubRepositorySubscriber & {
        type: "github_repository";
    }) | (BenefitLicenseKeysSubscriber & {
        type: "license_keys";
    })>;
    pagination: Pagination;
};
/** @internal */
export declare const UserBenefit$inboundSchema: z.ZodType<UserBenefit, z.ZodTypeDef, unknown>;
/** @internal */
export type UserBenefit$Outbound = (BenefitAdsSubscriber$Outbound & {
    type: "ads";
}) | (BenefitCustomSubscriber$Outbound & {
    type: "custom";
}) | (BenefitDiscordSubscriber$Outbound & {
    type: "discord";
}) | (BenefitDownloadablesSubscriber$Outbound & {
    type: "downloadables";
}) | (BenefitGitHubRepositorySubscriber$Outbound & {
    type: "github_repository";
}) | (BenefitLicenseKeysSubscriber$Outbound & {
    type: "license_keys";
});
/** @internal */
export declare const UserBenefit$outboundSchema: z.ZodType<UserBenefit$Outbound, z.ZodTypeDef, UserBenefit>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UserBenefit$ {
    /** @deprecated use `UserBenefit$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UserBenefit, z.ZodTypeDef, unknown>;
    /** @deprecated use `UserBenefit$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UserBenefit$Outbound, z.ZodTypeDef, UserBenefit>;
    /** @deprecated use `UserBenefit$Outbound` instead. */
    type Outbound = UserBenefit$Outbound;
}
export declare function userBenefitToJSON(userBenefit: UserBenefit): string;
export declare function userBenefitFromJSON(jsonString: string): SafeParseResult<UserBenefit, SDKValidationError>;
/** @internal */
export declare const ListResourceUserBenefit$inboundSchema: z.ZodType<ListResourceUserBenefit, z.ZodTypeDef, unknown>;
/** @internal */
export type ListResourceUserBenefit$Outbound = {
    items: Array<(BenefitAdsSubscriber$Outbound & {
        type: "ads";
    }) | (BenefitCustomSubscriber$Outbound & {
        type: "custom";
    }) | (BenefitDiscordSubscriber$Outbound & {
        type: "discord";
    }) | (BenefitDownloadablesSubscriber$Outbound & {
        type: "downloadables";
    }) | (BenefitGitHubRepositorySubscriber$Outbound & {
        type: "github_repository";
    }) | (BenefitLicenseKeysSubscriber$Outbound & {
        type: "license_keys";
    })>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const ListResourceUserBenefit$outboundSchema: z.ZodType<ListResourceUserBenefit$Outbound, z.ZodTypeDef, ListResourceUserBenefit>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListResourceUserBenefit$ {
    /** @deprecated use `ListResourceUserBenefit$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListResourceUserBenefit, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListResourceUserBenefit$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListResourceUserBenefit$Outbound, z.ZodTypeDef, ListResourceUserBenefit>;
    /** @deprecated use `ListResourceUserBenefit$Outbound` instead. */
    type Outbound = ListResourceUserBenefit$Outbound;
}
export declare function listResourceUserBenefitToJSON(listResourceUserBenefit: ListResourceUserBenefit): string;
export declare function listResourceUserBenefitFromJSON(jsonString: string): SafeParseResult<ListResourceUserBenefit, SDKValidationError>;
//# sourceMappingURL=listresourceuserbenefit.d.ts.map