import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CheckoutLinkUpdateMetadata = string | number | boolean;
/**
 * Schema to update an existing checkout link.
 */
export type CheckoutLinkUpdate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    label?: string | null | undefined;
    /**
     * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.
     */
    allowDiscountCodes?: boolean | null | undefined;
    productPriceId?: string | null | undefined;
    /**
     * ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored.
     */
    discountId?: string | null | undefined;
    /**
     * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.
     */
    successUrl?: string | null | undefined;
};
/** @internal */
export declare const CheckoutLinkUpdateMetadata$inboundSchema: z.ZodType<CheckoutLinkUpdateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutLinkUpdateMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const CheckoutLinkUpdateMetadata$outboundSchema: z.ZodType<CheckoutLinkUpdateMetadata$Outbound, z.ZodTypeDef, CheckoutLinkUpdateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutLinkUpdateMetadata$ {
    /** @deprecated use `CheckoutLinkUpdateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutLinkUpdateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutLinkUpdateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutLinkUpdateMetadata$Outbound, z.ZodTypeDef, CheckoutLinkUpdateMetadata>;
    /** @deprecated use `CheckoutLinkUpdateMetadata$Outbound` instead. */
    type Outbound = CheckoutLinkUpdateMetadata$Outbound;
}
export declare function checkoutLinkUpdateMetadataToJSON(checkoutLinkUpdateMetadata: CheckoutLinkUpdateMetadata): string;
export declare function checkoutLinkUpdateMetadataFromJSON(jsonString: string): SafeParseResult<CheckoutLinkUpdateMetadata, SDKValidationError>;
/** @internal */
export declare const CheckoutLinkUpdate$inboundSchema: z.ZodType<CheckoutLinkUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutLinkUpdate$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    label?: string | null | undefined;
    allow_discount_codes?: boolean | null | undefined;
    product_price_id?: string | null | undefined;
    discount_id?: string | null | undefined;
    success_url?: string | null | undefined;
};
/** @internal */
export declare const CheckoutLinkUpdate$outboundSchema: z.ZodType<CheckoutLinkUpdate$Outbound, z.ZodTypeDef, CheckoutLinkUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutLinkUpdate$ {
    /** @deprecated use `CheckoutLinkUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutLinkUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutLinkUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutLinkUpdate$Outbound, z.ZodTypeDef, CheckoutLinkUpdate>;
    /** @deprecated use `CheckoutLinkUpdate$Outbound` instead. */
    type Outbound = CheckoutLinkUpdate$Outbound;
}
export declare function checkoutLinkUpdateToJSON(checkoutLinkUpdate: CheckoutLinkUpdate): string;
export declare function checkoutLinkUpdateFromJSON(jsonString: string): SafeParseResult<CheckoutLinkUpdate, SDKValidationError>;
//# sourceMappingURL=checkoutlinkupdate.d.ts.map