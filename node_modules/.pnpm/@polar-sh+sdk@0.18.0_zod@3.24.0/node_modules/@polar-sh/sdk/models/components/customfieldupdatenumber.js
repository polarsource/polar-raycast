"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldUpdateNumber$ = exports.CustomFieldUpdateNumber$outboundSchema = exports.CustomFieldUpdateNumber$inboundSchema = exports.CustomFieldUpdateNumberType$ = exports.CustomFieldUpdateNumberType$outboundSchema = exports.CustomFieldUpdateNumberType$inboundSchema = exports.CustomFieldUpdateNumberMetadata$ = exports.CustomFieldUpdateNumberMetadata$outboundSchema = exports.CustomFieldUpdateNumberMetadata$inboundSchema = exports.CustomFieldUpdateNumberType = void 0;
exports.customFieldUpdateNumberMetadataToJSON = customFieldUpdateNumberMetadataToJSON;
exports.customFieldUpdateNumberMetadataFromJSON = customFieldUpdateNumberMetadataFromJSON;
exports.customFieldUpdateNumberToJSON = customFieldUpdateNumberToJSON;
exports.customFieldUpdateNumberFromJSON = customFieldUpdateNumberFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const customfieldnumberproperties_js_1 = require("./customfieldnumberproperties.js");
exports.CustomFieldUpdateNumberType = {
    Number: "number",
};
/** @internal */
exports.CustomFieldUpdateNumberMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CustomFieldUpdateNumberMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateNumberMetadata$;
(function (CustomFieldUpdateNumberMetadata$) {
    /** @deprecated use `CustomFieldUpdateNumberMetadata$inboundSchema` instead. */
    CustomFieldUpdateNumberMetadata$.inboundSchema = exports.CustomFieldUpdateNumberMetadata$inboundSchema;
    /** @deprecated use `CustomFieldUpdateNumberMetadata$outboundSchema` instead. */
    CustomFieldUpdateNumberMetadata$.outboundSchema = exports.CustomFieldUpdateNumberMetadata$outboundSchema;
})(CustomFieldUpdateNumberMetadata$ || (exports.CustomFieldUpdateNumberMetadata$ = CustomFieldUpdateNumberMetadata$ = {}));
function customFieldUpdateNumberMetadataToJSON(customFieldUpdateNumberMetadata) {
    return JSON.stringify(exports.CustomFieldUpdateNumberMetadata$outboundSchema.parse(customFieldUpdateNumberMetadata));
}
function customFieldUpdateNumberMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldUpdateNumberMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateNumberMetadata' from JSON`);
}
/** @internal */
exports.CustomFieldUpdateNumberType$inboundSchema = z.nativeEnum(exports.CustomFieldUpdateNumberType);
/** @internal */
exports.CustomFieldUpdateNumberType$outboundSchema = exports.CustomFieldUpdateNumberType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateNumberType$;
(function (CustomFieldUpdateNumberType$) {
    /** @deprecated use `CustomFieldUpdateNumberType$inboundSchema` instead. */
    CustomFieldUpdateNumberType$.inboundSchema = exports.CustomFieldUpdateNumberType$inboundSchema;
    /** @deprecated use `CustomFieldUpdateNumberType$outboundSchema` instead. */
    CustomFieldUpdateNumberType$.outboundSchema = exports.CustomFieldUpdateNumberType$outboundSchema;
})(CustomFieldUpdateNumberType$ || (exports.CustomFieldUpdateNumberType$ = CustomFieldUpdateNumberType$ = {}));
/** @internal */
exports.CustomFieldUpdateNumber$inboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("number").optional(),
    properties: z.nullable(customfieldnumberproperties_js_1.CustomFieldNumberProperties$inboundSchema).optional(),
});
/** @internal */
exports.CustomFieldUpdateNumber$outboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("number").default("number"),
    properties: z.nullable(customfieldnumberproperties_js_1.CustomFieldNumberProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldUpdateNumber$;
(function (CustomFieldUpdateNumber$) {
    /** @deprecated use `CustomFieldUpdateNumber$inboundSchema` instead. */
    CustomFieldUpdateNumber$.inboundSchema = exports.CustomFieldUpdateNumber$inboundSchema;
    /** @deprecated use `CustomFieldUpdateNumber$outboundSchema` instead. */
    CustomFieldUpdateNumber$.outboundSchema = exports.CustomFieldUpdateNumber$outboundSchema;
})(CustomFieldUpdateNumber$ || (exports.CustomFieldUpdateNumber$ = CustomFieldUpdateNumber$ = {}));
function customFieldUpdateNumberToJSON(customFieldUpdateNumber) {
    return JSON.stringify(exports.CustomFieldUpdateNumber$outboundSchema.parse(customFieldUpdateNumber));
}
function customFieldUpdateNumberFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldUpdateNumber$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateNumber' from JSON`);
}
//# sourceMappingURL=customfieldupdatenumber.js.map