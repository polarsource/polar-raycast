import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitGrantWebhook, BenefitGrantWebhook$Outbound } from "./benefitgrantwebhook.js";
export declare const WebhookBenefitGrantUpdatedPayloadType: {
    readonly BenefitGrantUpdated: "benefit_grant.updated";
};
export type WebhookBenefitGrantUpdatedPayloadType = ClosedEnum<typeof WebhookBenefitGrantUpdatedPayloadType>;
/**
 * Sent when a new benefit grant is updated.
 *
 * @remarks
 *
 * **Discord & Slack support:** Basic
 */
export type WebhookBenefitGrantUpdatedPayload = {
    type?: "benefit_grant.updated" | undefined;
    data: BenefitGrantWebhook;
};
/** @internal */
export declare const WebhookBenefitGrantUpdatedPayloadType$inboundSchema: z.ZodNativeEnum<typeof WebhookBenefitGrantUpdatedPayloadType>;
/** @internal */
export declare const WebhookBenefitGrantUpdatedPayloadType$outboundSchema: z.ZodNativeEnum<typeof WebhookBenefitGrantUpdatedPayloadType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookBenefitGrantUpdatedPayloadType$ {
    /** @deprecated use `WebhookBenefitGrantUpdatedPayloadType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly BenefitGrantUpdated: "benefit_grant.updated";
    }>;
    /** @deprecated use `WebhookBenefitGrantUpdatedPayloadType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly BenefitGrantUpdated: "benefit_grant.updated";
    }>;
}
/** @internal */
export declare const WebhookBenefitGrantUpdatedPayload$inboundSchema: z.ZodType<WebhookBenefitGrantUpdatedPayload, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhookBenefitGrantUpdatedPayload$Outbound = {
    type: "benefit_grant.updated";
    data: BenefitGrantWebhook$Outbound;
};
/** @internal */
export declare const WebhookBenefitGrantUpdatedPayload$outboundSchema: z.ZodType<WebhookBenefitGrantUpdatedPayload$Outbound, z.ZodTypeDef, WebhookBenefitGrantUpdatedPayload>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookBenefitGrantUpdatedPayload$ {
    /** @deprecated use `WebhookBenefitGrantUpdatedPayload$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhookBenefitGrantUpdatedPayload, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhookBenefitGrantUpdatedPayload$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhookBenefitGrantUpdatedPayload$Outbound, z.ZodTypeDef, WebhookBenefitGrantUpdatedPayload>;
    /** @deprecated use `WebhookBenefitGrantUpdatedPayload$Outbound` instead. */
    type Outbound = WebhookBenefitGrantUpdatedPayload$Outbound;
}
export declare function webhookBenefitGrantUpdatedPayloadToJSON(webhookBenefitGrantUpdatedPayload: WebhookBenefitGrantUpdatedPayload): string;
export declare function webhookBenefitGrantUpdatedPayloadFromJSON(jsonString: string): SafeParseResult<WebhookBenefitGrantUpdatedPayload, SDKValidationError>;
//# sourceMappingURL=webhookbenefitgrantupdatedpayload.d.ts.map