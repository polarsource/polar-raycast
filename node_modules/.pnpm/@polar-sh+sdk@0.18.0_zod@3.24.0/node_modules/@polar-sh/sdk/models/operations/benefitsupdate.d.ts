import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type BenefitsUpdateBenefitUpdate = components.BenefitAdsUpdate | components.BenefitCustomUpdate | components.BenefitDiscordUpdate | components.BenefitGitHubRepositoryUpdate | components.BenefitDownloadablesUpdate | components.BenefitLicenseKeysUpdate;
export type BenefitsUpdateRequest = {
    id: string;
    requestBody: components.BenefitAdsUpdate | components.BenefitCustomUpdate | components.BenefitDiscordUpdate | components.BenefitGitHubRepositoryUpdate | components.BenefitDownloadablesUpdate | components.BenefitLicenseKeysUpdate;
};
/** @internal */
export declare const BenefitsUpdateBenefitUpdate$inboundSchema: z.ZodType<BenefitsUpdateBenefitUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitsUpdateBenefitUpdate$Outbound = components.BenefitAdsUpdate$Outbound | components.BenefitCustomUpdate$Outbound | components.BenefitDiscordUpdate$Outbound | components.BenefitGitHubRepositoryUpdate$Outbound | components.BenefitDownloadablesUpdate$Outbound | components.BenefitLicenseKeysUpdate$Outbound;
/** @internal */
export declare const BenefitsUpdateBenefitUpdate$outboundSchema: z.ZodType<BenefitsUpdateBenefitUpdate$Outbound, z.ZodTypeDef, BenefitsUpdateBenefitUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitsUpdateBenefitUpdate$ {
    /** @deprecated use `BenefitsUpdateBenefitUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitsUpdateBenefitUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitsUpdateBenefitUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitsUpdateBenefitUpdate$Outbound, z.ZodTypeDef, BenefitsUpdateBenefitUpdate>;
    /** @deprecated use `BenefitsUpdateBenefitUpdate$Outbound` instead. */
    type Outbound = BenefitsUpdateBenefitUpdate$Outbound;
}
export declare function benefitsUpdateBenefitUpdateToJSON(benefitsUpdateBenefitUpdate: BenefitsUpdateBenefitUpdate): string;
export declare function benefitsUpdateBenefitUpdateFromJSON(jsonString: string): SafeParseResult<BenefitsUpdateBenefitUpdate, SDKValidationError>;
/** @internal */
export declare const BenefitsUpdateRequest$inboundSchema: z.ZodType<BenefitsUpdateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitsUpdateRequest$Outbound = {
    id: string;
    RequestBody: components.BenefitAdsUpdate$Outbound | components.BenefitCustomUpdate$Outbound | components.BenefitDiscordUpdate$Outbound | components.BenefitGitHubRepositoryUpdate$Outbound | components.BenefitDownloadablesUpdate$Outbound | components.BenefitLicenseKeysUpdate$Outbound;
};
/** @internal */
export declare const BenefitsUpdateRequest$outboundSchema: z.ZodType<BenefitsUpdateRequest$Outbound, z.ZodTypeDef, BenefitsUpdateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitsUpdateRequest$ {
    /** @deprecated use `BenefitsUpdateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitsUpdateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitsUpdateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitsUpdateRequest$Outbound, z.ZodTypeDef, BenefitsUpdateRequest>;
    /** @deprecated use `BenefitsUpdateRequest$Outbound` instead. */
    type Outbound = BenefitsUpdateRequest$Outbound;
}
export declare function benefitsUpdateRequestToJSON(benefitsUpdateRequest: BenefitsUpdateRequest): string;
export declare function benefitsUpdateRequestFromJSON(jsonString: string): SafeParseResult<BenefitsUpdateRequest, SDKValidationError>;
//# sourceMappingURL=benefitsupdate.d.ts.map