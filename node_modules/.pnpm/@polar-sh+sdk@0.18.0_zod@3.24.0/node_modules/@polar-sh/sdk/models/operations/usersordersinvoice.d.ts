import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UsersOrdersInvoiceRequest = {
    /**
     * The order ID.
     */
    id: string;
};
/** @internal */
export declare const UsersOrdersInvoiceRequest$inboundSchema: z.ZodType<UsersOrdersInvoiceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersOrdersInvoiceRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const UsersOrdersInvoiceRequest$outboundSchema: z.ZodType<UsersOrdersInvoiceRequest$Outbound, z.ZodTypeDef, UsersOrdersInvoiceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersOrdersInvoiceRequest$ {
    /** @deprecated use `UsersOrdersInvoiceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersOrdersInvoiceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersOrdersInvoiceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersOrdersInvoiceRequest$Outbound, z.ZodTypeDef, UsersOrdersInvoiceRequest>;
    /** @deprecated use `UsersOrdersInvoiceRequest$Outbound` instead. */
    type Outbound = UsersOrdersInvoiceRequest$Outbound;
}
export declare function usersOrdersInvoiceRequestToJSON(usersOrdersInvoiceRequest: UsersOrdersInvoiceRequest): string;
export declare function usersOrdersInvoiceRequestFromJSON(jsonString: string): SafeParseResult<UsersOrdersInvoiceRequest, SDKValidationError>;
//# sourceMappingURL=usersordersinvoice.d.ts.map