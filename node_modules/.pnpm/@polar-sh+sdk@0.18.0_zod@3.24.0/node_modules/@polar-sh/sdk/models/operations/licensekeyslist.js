"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LicenseKeysListResponse$ = exports.LicenseKeysListResponse$outboundSchema = exports.LicenseKeysListResponse$inboundSchema = exports.LicenseKeysListRequest$ = exports.LicenseKeysListRequest$outboundSchema = exports.LicenseKeysListRequest$inboundSchema = exports.LicenseKeysListQueryParamBenefitIDFilter$ = exports.LicenseKeysListQueryParamBenefitIDFilter$outboundSchema = exports.LicenseKeysListQueryParamBenefitIDFilter$inboundSchema = exports.LicenseKeysListQueryParamOrganizationIDFilter$ = exports.LicenseKeysListQueryParamOrganizationIDFilter$outboundSchema = exports.LicenseKeysListQueryParamOrganizationIDFilter$inboundSchema = void 0;
exports.licenseKeysListQueryParamOrganizationIDFilterToJSON = licenseKeysListQueryParamOrganizationIDFilterToJSON;
exports.licenseKeysListQueryParamOrganizationIDFilterFromJSON = licenseKeysListQueryParamOrganizationIDFilterFromJSON;
exports.licenseKeysListQueryParamBenefitIDFilterToJSON = licenseKeysListQueryParamBenefitIDFilterToJSON;
exports.licenseKeysListQueryParamBenefitIDFilterFromJSON = licenseKeysListQueryParamBenefitIDFilterFromJSON;
exports.licenseKeysListRequestToJSON = licenseKeysListRequestToJSON;
exports.licenseKeysListRequestFromJSON = licenseKeysListRequestFromJSON;
exports.licenseKeysListResponseToJSON = licenseKeysListResponseToJSON;
exports.licenseKeysListResponseFromJSON = licenseKeysListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.LicenseKeysListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.LicenseKeysListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LicenseKeysListQueryParamOrganizationIDFilter$;
(function (LicenseKeysListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `LicenseKeysListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    LicenseKeysListQueryParamOrganizationIDFilter$.inboundSchema = exports.LicenseKeysListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `LicenseKeysListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    LicenseKeysListQueryParamOrganizationIDFilter$.outboundSchema = exports.LicenseKeysListQueryParamOrganizationIDFilter$outboundSchema;
})(LicenseKeysListQueryParamOrganizationIDFilter$ || (exports.LicenseKeysListQueryParamOrganizationIDFilter$ = LicenseKeysListQueryParamOrganizationIDFilter$ = {}));
function licenseKeysListQueryParamOrganizationIDFilterToJSON(licenseKeysListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.LicenseKeysListQueryParamOrganizationIDFilter$outboundSchema.parse(licenseKeysListQueryParamOrganizationIDFilter));
}
function licenseKeysListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.LicenseKeysListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LicenseKeysListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.LicenseKeysListQueryParamBenefitIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.LicenseKeysListQueryParamBenefitIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LicenseKeysListQueryParamBenefitIDFilter$;
(function (LicenseKeysListQueryParamBenefitIDFilter$) {
    /** @deprecated use `LicenseKeysListQueryParamBenefitIDFilter$inboundSchema` instead. */
    LicenseKeysListQueryParamBenefitIDFilter$.inboundSchema = exports.LicenseKeysListQueryParamBenefitIDFilter$inboundSchema;
    /** @deprecated use `LicenseKeysListQueryParamBenefitIDFilter$outboundSchema` instead. */
    LicenseKeysListQueryParamBenefitIDFilter$.outboundSchema = exports.LicenseKeysListQueryParamBenefitIDFilter$outboundSchema;
})(LicenseKeysListQueryParamBenefitIDFilter$ || (exports.LicenseKeysListQueryParamBenefitIDFilter$ = LicenseKeysListQueryParamBenefitIDFilter$ = {}));
function licenseKeysListQueryParamBenefitIDFilterToJSON(licenseKeysListQueryParamBenefitIDFilter) {
    return JSON.stringify(exports.LicenseKeysListQueryParamBenefitIDFilter$outboundSchema.parse(licenseKeysListQueryParamBenefitIDFilter));
}
function licenseKeysListQueryParamBenefitIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.LicenseKeysListQueryParamBenefitIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LicenseKeysListQueryParamBenefitIDFilter' from JSON`);
}
/** @internal */
exports.LicenseKeysListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    benefit_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "benefit_id": "benefitId",
    });
});
/** @internal */
exports.LicenseKeysListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    benefitId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        benefitId: "benefit_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LicenseKeysListRequest$;
(function (LicenseKeysListRequest$) {
    /** @deprecated use `LicenseKeysListRequest$inboundSchema` instead. */
    LicenseKeysListRequest$.inboundSchema = exports.LicenseKeysListRequest$inboundSchema;
    /** @deprecated use `LicenseKeysListRequest$outboundSchema` instead. */
    LicenseKeysListRequest$.outboundSchema = exports.LicenseKeysListRequest$outboundSchema;
})(LicenseKeysListRequest$ || (exports.LicenseKeysListRequest$ = LicenseKeysListRequest$ = {}));
function licenseKeysListRequestToJSON(licenseKeysListRequest) {
    return JSON.stringify(exports.LicenseKeysListRequest$outboundSchema.parse(licenseKeysListRequest));
}
function licenseKeysListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.LicenseKeysListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LicenseKeysListRequest' from JSON`);
}
/** @internal */
exports.LicenseKeysListResponse$inboundSchema = z.object({
    Result: components.ListResourceLicenseKeyRead$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.LicenseKeysListResponse$outboundSchema = z.object({
    result: components.ListResourceLicenseKeyRead$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LicenseKeysListResponse$;
(function (LicenseKeysListResponse$) {
    /** @deprecated use `LicenseKeysListResponse$inboundSchema` instead. */
    LicenseKeysListResponse$.inboundSchema = exports.LicenseKeysListResponse$inboundSchema;
    /** @deprecated use `LicenseKeysListResponse$outboundSchema` instead. */
    LicenseKeysListResponse$.outboundSchema = exports.LicenseKeysListResponse$outboundSchema;
})(LicenseKeysListResponse$ || (exports.LicenseKeysListResponse$ = LicenseKeysListResponse$ = {}));
function licenseKeysListResponseToJSON(licenseKeysListResponse) {
    return JSON.stringify(exports.LicenseKeysListResponse$outboundSchema.parse(licenseKeysListResponse));
}
function licenseKeysListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.LicenseKeysListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LicenseKeysListResponse' from JSON`);
}
//# sourceMappingURL=licensekeyslist.js.map