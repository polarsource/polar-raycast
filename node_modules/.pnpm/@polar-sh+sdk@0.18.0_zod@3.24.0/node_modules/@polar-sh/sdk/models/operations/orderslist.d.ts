import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Filter by organization ID.
 */
export type OrdersListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by product ID.
 */
export type OrdersListQueryParamProductIDFilter = string | Array<string>;
/**
 * Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases.
 */
export type QueryParamProductPriceTypeFilter = components.ProductPriceType | Array<components.ProductPriceType>;
/**
 * Filter by discount ID.
 */
export type QueryParamDiscountIDFilter = string | Array<string>;
/**
 * Filter by customer's user ID.
 */
export type UserIDFilter = string | Array<string>;
export type OrdersListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by product ID.
     */
    productId?: string | Array<string> | null | undefined;
    /**
     * Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases.
     */
    productPriceType?: components.ProductPriceType | Array<components.ProductPriceType> | null | undefined;
    /**
     * Filter by discount ID.
     */
    discountId?: string | Array<string> | null | undefined;
    /**
     * Filter by customer's user ID.
     */
    userId?: string | Array<string> | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<components.OrderSortProperty> | null | undefined;
};
export type OrdersListResponse = {
    result: components.ListResourceOrder;
};
/** @internal */
export declare const OrdersListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const OrdersListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamOrganizationIDFilter>;
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = OrdersListQueryParamOrganizationIDFilter$Outbound;
}
export declare function ordersListQueryParamOrganizationIDFilterToJSON(ordersListQueryParamOrganizationIDFilter: OrdersListQueryParamOrganizationIDFilter): string;
export declare function ordersListQueryParamOrganizationIDFilterFromJSON(jsonString: string): SafeParseResult<OrdersListQueryParamOrganizationIDFilter, SDKValidationError>;
/** @internal */
export declare const OrdersListQueryParamProductIDFilter$inboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListQueryParamProductIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const OrdersListQueryParamProductIDFilter$outboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamProductIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListQueryParamProductIDFilter$ {
    /** @deprecated use `OrdersListQueryParamProductIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListQueryParamProductIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamProductIDFilter>;
    /** @deprecated use `OrdersListQueryParamProductIDFilter$Outbound` instead. */
    type Outbound = OrdersListQueryParamProductIDFilter$Outbound;
}
export declare function ordersListQueryParamProductIDFilterToJSON(ordersListQueryParamProductIDFilter: OrdersListQueryParamProductIDFilter): string;
export declare function ordersListQueryParamProductIDFilterFromJSON(jsonString: string): SafeParseResult<OrdersListQueryParamProductIDFilter, SDKValidationError>;
/** @internal */
export declare const QueryParamProductPriceTypeFilter$inboundSchema: z.ZodType<QueryParamProductPriceTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamProductPriceTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamProductPriceTypeFilter$outboundSchema: z.ZodType<QueryParamProductPriceTypeFilter$Outbound, z.ZodTypeDef, QueryParamProductPriceTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamProductPriceTypeFilter$ {
    /** @deprecated use `QueryParamProductPriceTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamProductPriceTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamProductPriceTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamProductPriceTypeFilter$Outbound, z.ZodTypeDef, QueryParamProductPriceTypeFilter>;
    /** @deprecated use `QueryParamProductPriceTypeFilter$Outbound` instead. */
    type Outbound = QueryParamProductPriceTypeFilter$Outbound;
}
export declare function queryParamProductPriceTypeFilterToJSON(queryParamProductPriceTypeFilter: QueryParamProductPriceTypeFilter): string;
export declare function queryParamProductPriceTypeFilterFromJSON(jsonString: string): SafeParseResult<QueryParamProductPriceTypeFilter, SDKValidationError>;
/** @internal */
export declare const QueryParamDiscountIDFilter$inboundSchema: z.ZodType<QueryParamDiscountIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamDiscountIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamDiscountIDFilter$outboundSchema: z.ZodType<QueryParamDiscountIDFilter$Outbound, z.ZodTypeDef, QueryParamDiscountIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamDiscountIDFilter$ {
    /** @deprecated use `QueryParamDiscountIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamDiscountIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamDiscountIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamDiscountIDFilter$Outbound, z.ZodTypeDef, QueryParamDiscountIDFilter>;
    /** @deprecated use `QueryParamDiscountIDFilter$Outbound` instead. */
    type Outbound = QueryParamDiscountIDFilter$Outbound;
}
export declare function queryParamDiscountIDFilterToJSON(queryParamDiscountIDFilter: QueryParamDiscountIDFilter): string;
export declare function queryParamDiscountIDFilterFromJSON(jsonString: string): SafeParseResult<QueryParamDiscountIDFilter, SDKValidationError>;
/** @internal */
export declare const UserIDFilter$inboundSchema: z.ZodType<UserIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type UserIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const UserIDFilter$outboundSchema: z.ZodType<UserIDFilter$Outbound, z.ZodTypeDef, UserIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UserIDFilter$ {
    /** @deprecated use `UserIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UserIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `UserIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UserIDFilter$Outbound, z.ZodTypeDef, UserIDFilter>;
    /** @deprecated use `UserIDFilter$Outbound` instead. */
    type Outbound = UserIDFilter$Outbound;
}
export declare function userIDFilterToJSON(userIDFilter: UserIDFilter): string;
export declare function userIDFilterFromJSON(jsonString: string): SafeParseResult<UserIDFilter, SDKValidationError>;
/** @internal */
export declare const OrdersListRequest$inboundSchema: z.ZodType<OrdersListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    product_id?: string | Array<string> | null | undefined;
    product_price_type?: string | Array<string> | null | undefined;
    discount_id?: string | Array<string> | null | undefined;
    user_id?: string | Array<string> | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const OrdersListRequest$outboundSchema: z.ZodType<OrdersListRequest$Outbound, z.ZodTypeDef, OrdersListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListRequest$ {
    /** @deprecated use `OrdersListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListRequest$Outbound, z.ZodTypeDef, OrdersListRequest>;
    /** @deprecated use `OrdersListRequest$Outbound` instead. */
    type Outbound = OrdersListRequest$Outbound;
}
export declare function ordersListRequestToJSON(ordersListRequest: OrdersListRequest): string;
export declare function ordersListRequestFromJSON(jsonString: string): SafeParseResult<OrdersListRequest, SDKValidationError>;
/** @internal */
export declare const OrdersListResponse$inboundSchema: z.ZodType<OrdersListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListResponse$Outbound = {
    Result: components.ListResourceOrder$Outbound;
};
/** @internal */
export declare const OrdersListResponse$outboundSchema: z.ZodType<OrdersListResponse$Outbound, z.ZodTypeDef, OrdersListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListResponse$ {
    /** @deprecated use `OrdersListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListResponse$Outbound, z.ZodTypeDef, OrdersListResponse>;
    /** @deprecated use `OrdersListResponse$Outbound` instead. */
    type Outbound = OrdersListResponse$Outbound;
}
export declare function ordersListResponseToJSON(ordersListResponse: OrdersListResponse): string;
export declare function ordersListResponseFromJSON(jsonString: string): SafeParseResult<OrdersListResponse, SDKValidationError>;
//# sourceMappingURL=orderslist.d.ts.map