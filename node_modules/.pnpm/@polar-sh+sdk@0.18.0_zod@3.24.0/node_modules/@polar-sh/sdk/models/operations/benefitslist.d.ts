import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Filter by organization ID.
 */
export type BenefitsListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by benefit type.
 */
export type QueryParamBenefitTypeFilter = components.BenefitType | Array<components.BenefitType>;
export type BenefitsListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by benefit type.
     */
    typeFilter?: components.BenefitType | Array<components.BenefitType> | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
};
export type BenefitsListResponse = {
    result: components.ListResourceBenefit;
};
/** @internal */
export declare const BenefitsListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<BenefitsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitsListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const BenefitsListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<BenefitsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, BenefitsListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitsListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `BenefitsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, BenefitsListQueryParamOrganizationIDFilter>;
    /** @deprecated use `BenefitsListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = BenefitsListQueryParamOrganizationIDFilter$Outbound;
}
export declare function benefitsListQueryParamOrganizationIDFilterToJSON(benefitsListQueryParamOrganizationIDFilter: BenefitsListQueryParamOrganizationIDFilter): string;
export declare function benefitsListQueryParamOrganizationIDFilterFromJSON(jsonString: string): SafeParseResult<BenefitsListQueryParamOrganizationIDFilter, SDKValidationError>;
/** @internal */
export declare const QueryParamBenefitTypeFilter$inboundSchema: z.ZodType<QueryParamBenefitTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamBenefitTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamBenefitTypeFilter$outboundSchema: z.ZodType<QueryParamBenefitTypeFilter$Outbound, z.ZodTypeDef, QueryParamBenefitTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamBenefitTypeFilter$ {
    /** @deprecated use `QueryParamBenefitTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamBenefitTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamBenefitTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamBenefitTypeFilter$Outbound, z.ZodTypeDef, QueryParamBenefitTypeFilter>;
    /** @deprecated use `QueryParamBenefitTypeFilter$Outbound` instead. */
    type Outbound = QueryParamBenefitTypeFilter$Outbound;
}
export declare function queryParamBenefitTypeFilterToJSON(queryParamBenefitTypeFilter: QueryParamBenefitTypeFilter): string;
export declare function queryParamBenefitTypeFilterFromJSON(jsonString: string): SafeParseResult<QueryParamBenefitTypeFilter, SDKValidationError>;
/** @internal */
export declare const BenefitsListRequest$inboundSchema: z.ZodType<BenefitsListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitsListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    type_filter?: string | Array<string> | null | undefined;
    page: number;
    limit: number;
};
/** @internal */
export declare const BenefitsListRequest$outboundSchema: z.ZodType<BenefitsListRequest$Outbound, z.ZodTypeDef, BenefitsListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitsListRequest$ {
    /** @deprecated use `BenefitsListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitsListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitsListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitsListRequest$Outbound, z.ZodTypeDef, BenefitsListRequest>;
    /** @deprecated use `BenefitsListRequest$Outbound` instead. */
    type Outbound = BenefitsListRequest$Outbound;
}
export declare function benefitsListRequestToJSON(benefitsListRequest: BenefitsListRequest): string;
export declare function benefitsListRequestFromJSON(jsonString: string): SafeParseResult<BenefitsListRequest, SDKValidationError>;
/** @internal */
export declare const BenefitsListResponse$inboundSchema: z.ZodType<BenefitsListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitsListResponse$Outbound = {
    Result: components.ListResourceBenefit$Outbound;
};
/** @internal */
export declare const BenefitsListResponse$outboundSchema: z.ZodType<BenefitsListResponse$Outbound, z.ZodTypeDef, BenefitsListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitsListResponse$ {
    /** @deprecated use `BenefitsListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitsListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitsListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitsListResponse$Outbound, z.ZodTypeDef, BenefitsListResponse>;
    /** @deprecated use `BenefitsListResponse$Outbound` instead. */
    type Outbound = BenefitsListResponse$Outbound;
}
export declare function benefitsListResponseToJSON(benefitsListResponse: BenefitsListResponse): string;
export declare function benefitsListResponseFromJSON(jsonString: string): SafeParseResult<BenefitsListResponse, SDKValidationError>;
//# sourceMappingURL=benefitslist.d.ts.map