"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFieldsListResponse$ = exports.CustomFieldsListResponse$outboundSchema = exports.CustomFieldsListResponse$inboundSchema = exports.CustomFieldsListRequest$ = exports.CustomFieldsListRequest$outboundSchema = exports.CustomFieldsListRequest$inboundSchema = exports.CustomFieldTypeFilter$ = exports.CustomFieldTypeFilter$outboundSchema = exports.CustomFieldTypeFilter$inboundSchema = exports.CustomFieldsListQueryParamOrganizationIDFilter$ = exports.CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema = exports.CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema = void 0;
exports.customFieldsListQueryParamOrganizationIDFilterToJSON = customFieldsListQueryParamOrganizationIDFilterToJSON;
exports.customFieldsListQueryParamOrganizationIDFilterFromJSON = customFieldsListQueryParamOrganizationIDFilterFromJSON;
exports.customFieldTypeFilterToJSON = customFieldTypeFilterToJSON;
exports.customFieldTypeFilterFromJSON = customFieldTypeFilterFromJSON;
exports.customFieldsListRequestToJSON = customFieldsListRequestToJSON;
exports.customFieldsListRequestFromJSON = customFieldsListRequestFromJSON;
exports.customFieldsListResponseToJSON = customFieldsListResponseToJSON;
exports.customFieldsListResponseFromJSON = customFieldsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldsListQueryParamOrganizationIDFilter$;
(function (CustomFieldsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomFieldsListQueryParamOrganizationIDFilter$.inboundSchema = exports.CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomFieldsListQueryParamOrganizationIDFilter$.outboundSchema = exports.CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomFieldsListQueryParamOrganizationIDFilter$ || (exports.CustomFieldsListQueryParamOrganizationIDFilter$ = CustomFieldsListQueryParamOrganizationIDFilter$ = {}));
function customFieldsListQueryParamOrganizationIDFilterToJSON(customFieldsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema.parse(customFieldsListQueryParamOrganizationIDFilter));
}
function customFieldsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.CustomFieldTypeFilter$inboundSchema = z.union([
    components.CustomFieldType$inboundSchema,
    z.array(components.CustomFieldType$inboundSchema),
]);
/** @internal */
exports.CustomFieldTypeFilter$outboundSchema = z.union([
    components.CustomFieldType$outboundSchema,
    z.array(components.CustomFieldType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldTypeFilter$;
(function (CustomFieldTypeFilter$) {
    /** @deprecated use `CustomFieldTypeFilter$inboundSchema` instead. */
    CustomFieldTypeFilter$.inboundSchema = exports.CustomFieldTypeFilter$inboundSchema;
    /** @deprecated use `CustomFieldTypeFilter$outboundSchema` instead. */
    CustomFieldTypeFilter$.outboundSchema = exports.CustomFieldTypeFilter$outboundSchema;
})(CustomFieldTypeFilter$ || (exports.CustomFieldTypeFilter$ = CustomFieldTypeFilter$ = {}));
function customFieldTypeFilterToJSON(customFieldTypeFilter) {
    return JSON.stringify(exports.CustomFieldTypeFilter$outboundSchema.parse(customFieldTypeFilter));
}
function customFieldTypeFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldTypeFilter' from JSON`);
}
/** @internal */
exports.CustomFieldsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    type_filter: z.nullable(z.union([
        components.CustomFieldType$inboundSchema,
        z.array(components.CustomFieldType$inboundSchema),
    ])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.CustomFieldSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "type_filter": "typeFilter",
    });
});
/** @internal */
exports.CustomFieldsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    typeFilter: z.nullable(z.union([
        components.CustomFieldType$outboundSchema,
        z.array(components.CustomFieldType$outboundSchema),
    ])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.CustomFieldSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        typeFilter: "type_filter",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldsListRequest$;
(function (CustomFieldsListRequest$) {
    /** @deprecated use `CustomFieldsListRequest$inboundSchema` instead. */
    CustomFieldsListRequest$.inboundSchema = exports.CustomFieldsListRequest$inboundSchema;
    /** @deprecated use `CustomFieldsListRequest$outboundSchema` instead. */
    CustomFieldsListRequest$.outboundSchema = exports.CustomFieldsListRequest$outboundSchema;
})(CustomFieldsListRequest$ || (exports.CustomFieldsListRequest$ = CustomFieldsListRequest$ = {}));
function customFieldsListRequestToJSON(customFieldsListRequest) {
    return JSON.stringify(exports.CustomFieldsListRequest$outboundSchema.parse(customFieldsListRequest));
}
function customFieldsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsListRequest' from JSON`);
}
/** @internal */
exports.CustomFieldsListResponse$inboundSchema = z.object({
    Result: components.ListResourceCustomField$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.CustomFieldsListResponse$outboundSchema = z.object({
    result: components.ListResourceCustomField$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomFieldsListResponse$;
(function (CustomFieldsListResponse$) {
    /** @deprecated use `CustomFieldsListResponse$inboundSchema` instead. */
    CustomFieldsListResponse$.inboundSchema = exports.CustomFieldsListResponse$inboundSchema;
    /** @deprecated use `CustomFieldsListResponse$outboundSchema` instead. */
    CustomFieldsListResponse$.outboundSchema = exports.CustomFieldsListResponse$outboundSchema;
})(CustomFieldsListResponse$ || (exports.CustomFieldsListResponse$ = CustomFieldsListResponse$ = {}));
function customFieldsListResponseToJSON(customFieldsListResponse) {
    return JSON.stringify(exports.CustomFieldsListResponse$outboundSchema.parse(customFieldsListResponse));
}
function customFieldsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomFieldsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsListResponse' from JSON`);
}
//# sourceMappingURL=customfieldslist.js.map