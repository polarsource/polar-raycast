import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Filter by organization ID.
 */
export type DiscountsListQueryParamOrganizationIDFilter = string | Array<string>;
export type DiscountsListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by name.
     */
    query?: string | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<components.DiscountSortProperty> | null | undefined;
};
export type DiscountsListResponse = {
    result: components.ListResourceDiscount;
};
/** @internal */
export declare const DiscountsListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<DiscountsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type DiscountsListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const DiscountsListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<DiscountsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, DiscountsListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DiscountsListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `DiscountsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DiscountsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `DiscountsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DiscountsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, DiscountsListQueryParamOrganizationIDFilter>;
    /** @deprecated use `DiscountsListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = DiscountsListQueryParamOrganizationIDFilter$Outbound;
}
export declare function discountsListQueryParamOrganizationIDFilterToJSON(discountsListQueryParamOrganizationIDFilter: DiscountsListQueryParamOrganizationIDFilter): string;
export declare function discountsListQueryParamOrganizationIDFilterFromJSON(jsonString: string): SafeParseResult<DiscountsListQueryParamOrganizationIDFilter, SDKValidationError>;
/** @internal */
export declare const DiscountsListRequest$inboundSchema: z.ZodType<DiscountsListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DiscountsListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    query?: string | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const DiscountsListRequest$outboundSchema: z.ZodType<DiscountsListRequest$Outbound, z.ZodTypeDef, DiscountsListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DiscountsListRequest$ {
    /** @deprecated use `DiscountsListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DiscountsListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DiscountsListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DiscountsListRequest$Outbound, z.ZodTypeDef, DiscountsListRequest>;
    /** @deprecated use `DiscountsListRequest$Outbound` instead. */
    type Outbound = DiscountsListRequest$Outbound;
}
export declare function discountsListRequestToJSON(discountsListRequest: DiscountsListRequest): string;
export declare function discountsListRequestFromJSON(jsonString: string): SafeParseResult<DiscountsListRequest, SDKValidationError>;
/** @internal */
export declare const DiscountsListResponse$inboundSchema: z.ZodType<DiscountsListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type DiscountsListResponse$Outbound = {
    Result: components.ListResourceDiscount$Outbound;
};
/** @internal */
export declare const DiscountsListResponse$outboundSchema: z.ZodType<DiscountsListResponse$Outbound, z.ZodTypeDef, DiscountsListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DiscountsListResponse$ {
    /** @deprecated use `DiscountsListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DiscountsListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `DiscountsListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DiscountsListResponse$Outbound, z.ZodTypeDef, DiscountsListResponse>;
    /** @deprecated use `DiscountsListResponse$Outbound` instead. */
    type Outbound = DiscountsListResponse$Outbound;
}
export declare function discountsListResponseToJSON(discountsListResponse: DiscountsListResponse): string;
export declare function discountsListResponseFromJSON(jsonString: string): SafeParseResult<DiscountsListResponse, SDKValidationError>;
//# sourceMappingURL=discountslist.d.ts.map