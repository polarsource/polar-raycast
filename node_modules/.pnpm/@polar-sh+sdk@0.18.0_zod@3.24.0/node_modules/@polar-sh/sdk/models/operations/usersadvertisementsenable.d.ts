import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UsersAdvertisementsEnableRequest = {
    /**
     * The advertisement campaign ID.
     */
    id: string;
    userAdvertisementCampaignEnable: components.UserAdvertisementCampaignEnable;
};
/** @internal */
export declare const UsersAdvertisementsEnableRequest$inboundSchema: z.ZodType<UsersAdvertisementsEnableRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersAdvertisementsEnableRequest$Outbound = {
    id: string;
    UserAdvertisementCampaignEnable: components.UserAdvertisementCampaignEnable$Outbound;
};
/** @internal */
export declare const UsersAdvertisementsEnableRequest$outboundSchema: z.ZodType<UsersAdvertisementsEnableRequest$Outbound, z.ZodTypeDef, UsersAdvertisementsEnableRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersAdvertisementsEnableRequest$ {
    /** @deprecated use `UsersAdvertisementsEnableRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersAdvertisementsEnableRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersAdvertisementsEnableRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersAdvertisementsEnableRequest$Outbound, z.ZodTypeDef, UsersAdvertisementsEnableRequest>;
    /** @deprecated use `UsersAdvertisementsEnableRequest$Outbound` instead. */
    type Outbound = UsersAdvertisementsEnableRequest$Outbound;
}
export declare function usersAdvertisementsEnableRequestToJSON(usersAdvertisementsEnableRequest: UsersAdvertisementsEnableRequest): string;
export declare function usersAdvertisementsEnableRequestFromJSON(jsonString: string): SafeParseResult<UsersAdvertisementsEnableRequest, SDKValidationError>;
//# sourceMappingURL=usersadvertisementsenable.d.ts.map