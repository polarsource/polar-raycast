import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export declare const Oauth2IntrospectTokenTokenTypeHint: {
    readonly AccessToken: "access_token";
    readonly RefreshToken: "refresh_token";
};
export type Oauth2IntrospectTokenTokenTypeHint = ClosedEnum<typeof Oauth2IntrospectTokenTokenTypeHint>;
export type Oauth2IntrospectTokenIntrospectTokenRequest = {
    token: string;
    tokenTypeHint?: Oauth2IntrospectTokenTokenTypeHint | null | undefined;
    clientId: string;
    clientSecret: string;
};
/** @internal */
export declare const Oauth2IntrospectTokenTokenTypeHint$inboundSchema: z.ZodNativeEnum<typeof Oauth2IntrospectTokenTokenTypeHint>;
/** @internal */
export declare const Oauth2IntrospectTokenTokenTypeHint$outboundSchema: z.ZodNativeEnum<typeof Oauth2IntrospectTokenTokenTypeHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Oauth2IntrospectTokenTokenTypeHint$ {
    /** @deprecated use `Oauth2IntrospectTokenTokenTypeHint$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly AccessToken: "access_token";
        readonly RefreshToken: "refresh_token";
    }>;
    /** @deprecated use `Oauth2IntrospectTokenTokenTypeHint$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly AccessToken: "access_token";
        readonly RefreshToken: "refresh_token";
    }>;
}
/** @internal */
export declare const Oauth2IntrospectTokenIntrospectTokenRequest$inboundSchema: z.ZodType<Oauth2IntrospectTokenIntrospectTokenRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type Oauth2IntrospectTokenIntrospectTokenRequest$Outbound = {
    token: string;
    token_type_hint?: string | null | undefined;
    client_id: string;
    client_secret: string;
};
/** @internal */
export declare const Oauth2IntrospectTokenIntrospectTokenRequest$outboundSchema: z.ZodType<Oauth2IntrospectTokenIntrospectTokenRequest$Outbound, z.ZodTypeDef, Oauth2IntrospectTokenIntrospectTokenRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Oauth2IntrospectTokenIntrospectTokenRequest$ {
    /** @deprecated use `Oauth2IntrospectTokenIntrospectTokenRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Oauth2IntrospectTokenIntrospectTokenRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `Oauth2IntrospectTokenIntrospectTokenRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Oauth2IntrospectTokenIntrospectTokenRequest$Outbound, z.ZodTypeDef, Oauth2IntrospectTokenIntrospectTokenRequest>;
    /** @deprecated use `Oauth2IntrospectTokenIntrospectTokenRequest$Outbound` instead. */
    type Outbound = Oauth2IntrospectTokenIntrospectTokenRequest$Outbound;
}
export declare function oauth2IntrospectTokenIntrospectTokenRequestToJSON(oauth2IntrospectTokenIntrospectTokenRequest: Oauth2IntrospectTokenIntrospectTokenRequest): string;
export declare function oauth2IntrospectTokenIntrospectTokenRequestFromJSON(jsonString: string): SafeParseResult<Oauth2IntrospectTokenIntrospectTokenRequest, SDKValidationError>;
//# sourceMappingURL=oauth2introspecttoken.d.ts.map