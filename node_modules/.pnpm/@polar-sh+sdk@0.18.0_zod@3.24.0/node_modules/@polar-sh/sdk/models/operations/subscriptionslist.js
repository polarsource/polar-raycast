"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionsListResponse$ = exports.SubscriptionsListResponse$outboundSchema = exports.SubscriptionsListResponse$inboundSchema = exports.SubscriptionsListRequest$ = exports.SubscriptionsListRequest$outboundSchema = exports.SubscriptionsListRequest$inboundSchema = exports.DiscountIDFilter$ = exports.DiscountIDFilter$outboundSchema = exports.DiscountIDFilter$inboundSchema = exports.SubscriptionsListQueryParamProductIDFilter$ = exports.SubscriptionsListQueryParamProductIDFilter$outboundSchema = exports.SubscriptionsListQueryParamProductIDFilter$inboundSchema = exports.SubscriptionsListQueryParamOrganizationIDFilter$ = exports.SubscriptionsListQueryParamOrganizationIDFilter$outboundSchema = exports.SubscriptionsListQueryParamOrganizationIDFilter$inboundSchema = void 0;
exports.subscriptionsListQueryParamOrganizationIDFilterToJSON = subscriptionsListQueryParamOrganizationIDFilterToJSON;
exports.subscriptionsListQueryParamOrganizationIDFilterFromJSON = subscriptionsListQueryParamOrganizationIDFilterFromJSON;
exports.subscriptionsListQueryParamProductIDFilterToJSON = subscriptionsListQueryParamProductIDFilterToJSON;
exports.subscriptionsListQueryParamProductIDFilterFromJSON = subscriptionsListQueryParamProductIDFilterFromJSON;
exports.discountIDFilterToJSON = discountIDFilterToJSON;
exports.discountIDFilterFromJSON = discountIDFilterFromJSON;
exports.subscriptionsListRequestToJSON = subscriptionsListRequestToJSON;
exports.subscriptionsListRequestFromJSON = subscriptionsListRequestFromJSON;
exports.subscriptionsListResponseToJSON = subscriptionsListResponseToJSON;
exports.subscriptionsListResponseFromJSON = subscriptionsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.SubscriptionsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.SubscriptionsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionsListQueryParamOrganizationIDFilter$;
(function (SubscriptionsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `SubscriptionsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    SubscriptionsListQueryParamOrganizationIDFilter$.inboundSchema = exports.SubscriptionsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `SubscriptionsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    SubscriptionsListQueryParamOrganizationIDFilter$.outboundSchema = exports.SubscriptionsListQueryParamOrganizationIDFilter$outboundSchema;
})(SubscriptionsListQueryParamOrganizationIDFilter$ || (exports.SubscriptionsListQueryParamOrganizationIDFilter$ = SubscriptionsListQueryParamOrganizationIDFilter$ = {}));
function subscriptionsListQueryParamOrganizationIDFilterToJSON(subscriptionsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.SubscriptionsListQueryParamOrganizationIDFilter$outboundSchema.parse(subscriptionsListQueryParamOrganizationIDFilter));
}
function subscriptionsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionsListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.SubscriptionsListQueryParamProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.SubscriptionsListQueryParamProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionsListQueryParamProductIDFilter$;
(function (SubscriptionsListQueryParamProductIDFilter$) {
    /** @deprecated use `SubscriptionsListQueryParamProductIDFilter$inboundSchema` instead. */
    SubscriptionsListQueryParamProductIDFilter$.inboundSchema = exports.SubscriptionsListQueryParamProductIDFilter$inboundSchema;
    /** @deprecated use `SubscriptionsListQueryParamProductIDFilter$outboundSchema` instead. */
    SubscriptionsListQueryParamProductIDFilter$.outboundSchema = exports.SubscriptionsListQueryParamProductIDFilter$outboundSchema;
})(SubscriptionsListQueryParamProductIDFilter$ || (exports.SubscriptionsListQueryParamProductIDFilter$ = SubscriptionsListQueryParamProductIDFilter$ = {}));
function subscriptionsListQueryParamProductIDFilterToJSON(subscriptionsListQueryParamProductIDFilter) {
    return JSON.stringify(exports.SubscriptionsListQueryParamProductIDFilter$outboundSchema.parse(subscriptionsListQueryParamProductIDFilter));
}
function subscriptionsListQueryParamProductIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionsListQueryParamProductIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsListQueryParamProductIDFilter' from JSON`);
}
/** @internal */
exports.DiscountIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.DiscountIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DiscountIDFilter$;
(function (DiscountIDFilter$) {
    /** @deprecated use `DiscountIDFilter$inboundSchema` instead. */
    DiscountIDFilter$.inboundSchema = exports.DiscountIDFilter$inboundSchema;
    /** @deprecated use `DiscountIDFilter$outboundSchema` instead. */
    DiscountIDFilter$.outboundSchema = exports.DiscountIDFilter$outboundSchema;
})(DiscountIDFilter$ || (exports.DiscountIDFilter$ = DiscountIDFilter$ = {}));
function discountIDFilterToJSON(discountIDFilter) {
    return JSON.stringify(exports.DiscountIDFilter$outboundSchema.parse(discountIDFilter));
}
function discountIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DiscountIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountIDFilter' from JSON`);
}
/** @internal */
exports.SubscriptionsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    discount_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    active: z.nullable(z.boolean()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.SubscriptionSortProperty$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "product_id": "productId",
        "discount_id": "discountId",
    });
});
/** @internal */
exports.SubscriptionsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    discountId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    active: z.nullable(z.boolean()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.SubscriptionSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        productId: "product_id",
        discountId: "discount_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionsListRequest$;
(function (SubscriptionsListRequest$) {
    /** @deprecated use `SubscriptionsListRequest$inboundSchema` instead. */
    SubscriptionsListRequest$.inboundSchema = exports.SubscriptionsListRequest$inboundSchema;
    /** @deprecated use `SubscriptionsListRequest$outboundSchema` instead. */
    SubscriptionsListRequest$.outboundSchema = exports.SubscriptionsListRequest$outboundSchema;
})(SubscriptionsListRequest$ || (exports.SubscriptionsListRequest$ = SubscriptionsListRequest$ = {}));
function subscriptionsListRequestToJSON(subscriptionsListRequest) {
    return JSON.stringify(exports.SubscriptionsListRequest$outboundSchema.parse(subscriptionsListRequest));
}
function subscriptionsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsListRequest' from JSON`);
}
/** @internal */
exports.SubscriptionsListResponse$inboundSchema = z.object({
    Result: components.ListResourceSubscription$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.SubscriptionsListResponse$outboundSchema = z.object({
    result: components.ListResourceSubscription$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionsListResponse$;
(function (SubscriptionsListResponse$) {
    /** @deprecated use `SubscriptionsListResponse$inboundSchema` instead. */
    SubscriptionsListResponse$.inboundSchema = exports.SubscriptionsListResponse$inboundSchema;
    /** @deprecated use `SubscriptionsListResponse$outboundSchema` instead. */
    SubscriptionsListResponse$.outboundSchema = exports.SubscriptionsListResponse$outboundSchema;
})(SubscriptionsListResponse$ || (exports.SubscriptionsListResponse$ = SubscriptionsListResponse$ = {}));
function subscriptionsListResponseToJSON(subscriptionsListResponse) {
    return JSON.stringify(exports.SubscriptionsListResponse$outboundSchema.parse(subscriptionsListResponse));
}
function subscriptionsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsListResponse' from JSON`);
}
//# sourceMappingURL=subscriptionslist.js.map