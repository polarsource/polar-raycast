import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Filter by organization ID.
 */
export type CustomFieldsListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by custom field type.
 */
export type CustomFieldTypeFilter = components.CustomFieldType | Array<components.CustomFieldType>;
export type CustomFieldsListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by custom field name or slug.
     */
    query?: string | null | undefined;
    /**
     * Filter by custom field type.
     */
    typeFilter?: components.CustomFieldType | Array<components.CustomFieldType> | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<components.CustomFieldSortProperty> | null | undefined;
};
export type CustomFieldsListResponse = {
    result: components.ListResourceCustomField;
};
/** @internal */
export declare const CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<CustomFieldsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldsListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<CustomFieldsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, CustomFieldsListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldsListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, CustomFieldsListQueryParamOrganizationIDFilter>;
    /** @deprecated use `CustomFieldsListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = CustomFieldsListQueryParamOrganizationIDFilter$Outbound;
}
export declare function customFieldsListQueryParamOrganizationIDFilterToJSON(customFieldsListQueryParamOrganizationIDFilter: CustomFieldsListQueryParamOrganizationIDFilter): string;
export declare function customFieldsListQueryParamOrganizationIDFilterFromJSON(jsonString: string): SafeParseResult<CustomFieldsListQueryParamOrganizationIDFilter, SDKValidationError>;
/** @internal */
export declare const CustomFieldTypeFilter$inboundSchema: z.ZodType<CustomFieldTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CustomFieldTypeFilter$outboundSchema: z.ZodType<CustomFieldTypeFilter$Outbound, z.ZodTypeDef, CustomFieldTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldTypeFilter$ {
    /** @deprecated use `CustomFieldTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldTypeFilter$Outbound, z.ZodTypeDef, CustomFieldTypeFilter>;
    /** @deprecated use `CustomFieldTypeFilter$Outbound` instead. */
    type Outbound = CustomFieldTypeFilter$Outbound;
}
export declare function customFieldTypeFilterToJSON(customFieldTypeFilter: CustomFieldTypeFilter): string;
export declare function customFieldTypeFilterFromJSON(jsonString: string): SafeParseResult<CustomFieldTypeFilter, SDKValidationError>;
/** @internal */
export declare const CustomFieldsListRequest$inboundSchema: z.ZodType<CustomFieldsListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldsListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    query?: string | null | undefined;
    type_filter?: string | Array<string> | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const CustomFieldsListRequest$outboundSchema: z.ZodType<CustomFieldsListRequest$Outbound, z.ZodTypeDef, CustomFieldsListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldsListRequest$ {
    /** @deprecated use `CustomFieldsListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldsListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldsListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldsListRequest$Outbound, z.ZodTypeDef, CustomFieldsListRequest>;
    /** @deprecated use `CustomFieldsListRequest$Outbound` instead. */
    type Outbound = CustomFieldsListRequest$Outbound;
}
export declare function customFieldsListRequestToJSON(customFieldsListRequest: CustomFieldsListRequest): string;
export declare function customFieldsListRequestFromJSON(jsonString: string): SafeParseResult<CustomFieldsListRequest, SDKValidationError>;
/** @internal */
export declare const CustomFieldsListResponse$inboundSchema: z.ZodType<CustomFieldsListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldsListResponse$Outbound = {
    Result: components.ListResourceCustomField$Outbound;
};
/** @internal */
export declare const CustomFieldsListResponse$outboundSchema: z.ZodType<CustomFieldsListResponse$Outbound, z.ZodTypeDef, CustomFieldsListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldsListResponse$ {
    /** @deprecated use `CustomFieldsListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldsListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldsListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldsListResponse$Outbound, z.ZodTypeDef, CustomFieldsListResponse>;
    /** @deprecated use `CustomFieldsListResponse$Outbound` instead. */
    type Outbound = CustomFieldsListResponse$Outbound;
}
export declare function customFieldsListResponseToJSON(customFieldsListResponse: CustomFieldsListResponse): string;
export declare function customFieldsListResponseFromJSON(jsonString: string): SafeParseResult<CustomFieldsListResponse, SDKValidationError>;
//# sourceMappingURL=customfieldslist.d.ts.map