import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CheckoutsGetRequest = {
    id: string;
};
/** @internal */
export declare const CheckoutsGetRequest$inboundSchema: z.ZodType<CheckoutsGetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutsGetRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const CheckoutsGetRequest$outboundSchema: z.ZodType<CheckoutsGetRequest$Outbound, z.ZodTypeDef, CheckoutsGetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutsGetRequest$ {
    /** @deprecated use `CheckoutsGetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutsGetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutsGetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutsGetRequest$Outbound, z.ZodTypeDef, CheckoutsGetRequest>;
    /** @deprecated use `CheckoutsGetRequest$Outbound` instead. */
    type Outbound = CheckoutsGetRequest$Outbound;
}
export declare function checkoutsGetRequestToJSON(checkoutsGetRequest: CheckoutsGetRequest): string;
export declare function checkoutsGetRequestFromJSON(jsonString: string): SafeParseResult<CheckoutsGetRequest, SDKValidationError>;
//# sourceMappingURL=checkoutsget.d.ts.map