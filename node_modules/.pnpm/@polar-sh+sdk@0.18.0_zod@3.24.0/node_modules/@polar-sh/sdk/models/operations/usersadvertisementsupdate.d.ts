import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UsersAdvertisementsUpdateRequest = {
    /**
     * The advertisement campaign ID.
     */
    id: string;
    userAdvertisementCampaignUpdate: components.UserAdvertisementCampaignUpdate;
};
/** @internal */
export declare const UsersAdvertisementsUpdateRequest$inboundSchema: z.ZodType<UsersAdvertisementsUpdateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersAdvertisementsUpdateRequest$Outbound = {
    id: string;
    UserAdvertisementCampaignUpdate: components.UserAdvertisementCampaignUpdate$Outbound;
};
/** @internal */
export declare const UsersAdvertisementsUpdateRequest$outboundSchema: z.ZodType<UsersAdvertisementsUpdateRequest$Outbound, z.ZodTypeDef, UsersAdvertisementsUpdateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersAdvertisementsUpdateRequest$ {
    /** @deprecated use `UsersAdvertisementsUpdateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersAdvertisementsUpdateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersAdvertisementsUpdateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersAdvertisementsUpdateRequest$Outbound, z.ZodTypeDef, UsersAdvertisementsUpdateRequest>;
    /** @deprecated use `UsersAdvertisementsUpdateRequest$Outbound` instead. */
    type Outbound = UsersAdvertisementsUpdateRequest$Outbound;
}
export declare function usersAdvertisementsUpdateRequestToJSON(usersAdvertisementsUpdateRequest: UsersAdvertisementsUpdateRequest): string;
export declare function usersAdvertisementsUpdateRequestFromJSON(jsonString: string): SafeParseResult<UsersAdvertisementsUpdateRequest, SDKValidationError>;
//# sourceMappingURL=usersadvertisementsupdate.d.ts.map