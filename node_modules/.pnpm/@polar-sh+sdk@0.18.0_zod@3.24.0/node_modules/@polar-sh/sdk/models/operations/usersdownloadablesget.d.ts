import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UsersDownloadablesGetRequest = {
    token: string;
};
/** @internal */
export declare const UsersDownloadablesGetRequest$inboundSchema: z.ZodType<UsersDownloadablesGetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersDownloadablesGetRequest$Outbound = {
    token: string;
};
/** @internal */
export declare const UsersDownloadablesGetRequest$outboundSchema: z.ZodType<UsersDownloadablesGetRequest$Outbound, z.ZodTypeDef, UsersDownloadablesGetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersDownloadablesGetRequest$ {
    /** @deprecated use `UsersDownloadablesGetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersDownloadablesGetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersDownloadablesGetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersDownloadablesGetRequest$Outbound, z.ZodTypeDef, UsersDownloadablesGetRequest>;
    /** @deprecated use `UsersDownloadablesGetRequest$Outbound` instead. */
    type Outbound = UsersDownloadablesGetRequest$Outbound;
}
export declare function usersDownloadablesGetRequestToJSON(usersDownloadablesGetRequest: UsersDownloadablesGetRequest): string;
export declare function usersDownloadablesGetRequestFromJSON(jsonString: string): SafeParseResult<UsersDownloadablesGetRequest, SDKValidationError>;
//# sourceMappingURL=usersdownloadablesget.d.ts.map